# This workflow will install Python dependencies, run tests, lint, and perform static code analysis
# All unit tests found in the tests/ directory are run.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run tests

on: push

jobs:
  linting-flake8:
    # Lints the Python files, checking for style and correctness
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install flake8
        run: |
          python -m pip install flake8
      - name: Run lint with flake8
        run: |
          flake8 src --show-source --count --statistics --max-line-length=120


  linting-js:
    name: Lint Front-end application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./visualisation
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint


  unit-tests:
    # Starts the database, builds the testing docker image and runs all unit tests using docker
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Start database
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: db
        run: |
          docker-compose up -d db_postgres
      - name: Build unit test image
        run: |
          docker build -t unit_test -f Dockerfile.unittest .
      - name: Create .env file with API keys
        env:
          ENV_BASE64: ${{ secrets.ENV_BASE64 }}
        run: |
          echo import .env file from secrets and regenerate the file
          echo $ENV_BASE64 | base64 -d > .env
      - name: Run unit tests
        run: |
          docker run --network="host" unit_test

  sonarcloud:
    # Runs static-code analysis on SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
