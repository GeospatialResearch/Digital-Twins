src.geoserver.geoserver_common
==============================

.. py:module:: src.geoserver.geoserver_common

.. autoapi-nested-parse::

   Core functions for serving data and working with workspaces in geoserver.



Attributes
----------

.. autoapisummary::

   src.geoserver.geoserver_common.log
   src.geoserver.geoserver_common._xml_header


Functions
---------

.. autoapisummary::

   src.geoserver.geoserver_common.get_geoserver_url
   src.geoserver.geoserver_common.create_workspace_if_not_exists
   src.geoserver.geoserver_common.style_exists


Module Contents
---------------

.. py:data:: log

.. py:data:: _xml_header

.. py:function:: get_geoserver_url() -> str

   Retrieve full GeoServer URL from environment variables.

   :returns: The full GeoServer URL
   :rtype: str


.. py:function:: create_workspace_if_not_exists(workspace_name: str) -> None

   Create a GeoServer workspace if it does not currently exist.

   :param workspace_name: The name of the workspace to create if it does not exists.
   :type workspace_name: str

   :raises HTTPError: If geoserver responds with an error, raises it as an exception since it is unexpected.


.. py:function:: style_exists(style_name: str) -> bool

   Check if a GeoServer style definition already exists for a given style_name.
   The style definition may be empty.

   :param style_name: The name of the style to check for
   :type style_name: str

   :returns: True if the style exists, although it may be empty.
             False if it does not exist.
   :rtype: bool

   :raises HTTPError: If geoserver responds with anything but OK or NOT_FOUND, raises it as an exception since it is unexpected.


