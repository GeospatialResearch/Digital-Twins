Search.setIndex({"alltitles": {"API Reference": [[42, null]], "Attributes": [[0, "attributes"], [2, "attributes"], [3, "attributes"], [6, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [25, "attributes"], [26, "attributes"], [27, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [36, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [41, "attributes"], [43, "attributes"], [46, "attributes"], [47, "attributes"], [50, "attributes"], [51, "attributes"], [52, "attributes"], [53, "attributes"], [54, "attributes"], [55, "attributes"], [56, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [62, "attributes"]], "Classes": [[7, "classes"], [8, "classes"], [17, "classes"], [19, "classes"], [25, "classes"], [28, "classes"], [33, "classes"], [40, "classes"], [41, "classes"], [45, "classes"], [46, "classes"], [48, "classes"], [53, "classes"], [54, "classes"], [62, "classes"]], "Contents:": [[63, null]], "Exceptions": [[12, "exceptions"], [29, "exceptions"], [47, "exceptions"]], "Functions": [[0, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [36, "functions"], [37, "functions"], [41, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [61, "functions"], [62, "functions"]], "Indices and tables": [[63, "indices-and-tables"]], "Module Contents": [[0, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [58, "module-contents"], [59, "module-contents"], [61, "module-contents"], [62, "module-contents"]], "Package Contents": [[38, "package-contents"], [57, "package-contents"], [60, "package-contents"]], "Python codebase documentation": [[63, "python-codebase-documentation"]], "REST API specification": [[63, "rest-api-specification"]], "Submodules": [[1, "submodules"], [5, "submodules"], [14, "submodules"], [24, "submodules"], [35, "submodules"], [38, "submodules"], [49, "submodules"], [57, "submodules"], [60, "submodules"]], "Welcome to Digital Twin for Flood Resilience in Aotearoa New Zealand\u2019s documentation!": [[63, null]], "floodresilience": [[38, null]], "floodresilience.blueprint": [[0, null]], "floodresilience.dynamic_boundary_conditions": [[1, null]], "floodresilience.dynamic_boundary_conditions.rainfall": [[5, null]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db": [[2, null]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db": [[3, null]], "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph": [[4, null]], "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall": [[6, null]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds": [[7, null]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum": [[8, null]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input": [[9, null]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites": [[10, null]], "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons": [[11, null]], "floodresilience.dynamic_boundary_conditions.river": [[14, null]], "floodresilience.dynamic_boundary_conditions.river.align_rec_osm": [[12, null]], "floodresilience.dynamic_boundary_conditions.river.hydrograph": [[13, null]], "floodresilience.dynamic_boundary_conditions.river.main_river": [[15, null]], "floodresilience.dynamic_boundary_conditions.river.osm_waterways": [[16, null]], "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa": [[17, null]], "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db": [[18, null]], "floodresilience.dynamic_boundary_conditions.river.river_enum": [[19, null]], "floodresilience.dynamic_boundary_conditions.river.river_inflows": [[20, null]], "floodresilience.dynamic_boundary_conditions.river.river_model_input": [[21, null]], "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi": [[22, null]], "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db": [[23, null]], "floodresilience.dynamic_boundary_conditions.tide": [[24, null]], "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr": [[25, null]], "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data": [[26, null]], "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa": [[27, null]], "floodresilience.dynamic_boundary_conditions.tide.tide_enum": [[28, null]], "floodresilience.dynamic_boundary_conditions.tide.tide_query_location": [[29, null]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine": [[30, null]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input": [[31, null]], "floodresilience.flood_model": [[35, null]], "floodresilience.flood_model.bg_flood_model": [[32, null]], "floodresilience.flood_model.flood_scenario_process_service": [[33, null]], "floodresilience.flood_model.flooded_buildings": [[34, null]], "floodresilience.flood_model.process_hydro_dem": [[36, null]], "floodresilience.flood_model.serve_model": [[37, null]], "floodresilience.run_all": [[39, null]], "floodresilience.tables": [[40, null]], "floodresilience.tasks": [[41, null]], "src": [[60, null]], "src.app": [[43, null]], "src.check_celery_alive": [[44, null]], "src.config": [[45, null]], "src.digitaltwin": [[49, null]], "src.digitaltwin.arcgis_rest_api": [[46, null]], "src.digitaltwin.data_to_db": [[47, null]], "src.digitaltwin.get_data_using_geoapis": [[48, null]], "src.digitaltwin.instructions_records_to_db": [[50, null]], "src.digitaltwin.retrieve_from_instructions": [[51, null]], "src.digitaltwin.setup_environment": [[52, null]], "src.digitaltwin.tables": [[53, null]], "src.digitaltwin.utils": [[54, null]], "src.geoserver": [[57, null]], "src.geoserver.database_layers": [[55, null]], "src.geoserver.geoserver_common": [[56, null]], "src.geoserver.netcdf_layers": [[58, null]], "src.geoserver.raster_layers": [[59, null]], "src.run_all": [[61, null]], "src.tasks": [[62, null]]}, "docnames": ["autoapi/floodresilience/blueprint/index", "autoapi/floodresilience/dynamic_boundary_conditions/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hirds_rainfall_data_from_db/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hirds_rainfall_data_to_db/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hyetograph/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/main_rainfall/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_data_from_hirds/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_enum/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_model_input/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_sites/index", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/thiessen_polygons/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/align_rec_osm/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/hydrograph/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/main_river/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/osm_waterways/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_data_from_niwa/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_data_to_from_db/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_enum/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_inflows/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_model_input/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_network_for_aoi/index", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_network_to_from_db/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/main_tide_slr/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/sea_level_rise_data/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_data_from_niwa/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_enum/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_query_location/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_slr_combine/index", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_slr_model_input/index", "autoapi/floodresilience/flood_model/bg_flood_model/index", "autoapi/floodresilience/flood_model/flood_scenario_process_service/index", "autoapi/floodresilience/flood_model/flooded_buildings/index", "autoapi/floodresilience/flood_model/index", "autoapi/floodresilience/flood_model/process_hydro_dem/index", "autoapi/floodresilience/flood_model/serve_model/index", "autoapi/floodresilience/index", "autoapi/floodresilience/run_all/index", "autoapi/floodresilience/tables/index", "autoapi/floodresilience/tasks/index", "autoapi/index", "autoapi/src/app/index", "autoapi/src/check_celery_alive/index", "autoapi/src/config/index", "autoapi/src/digitaltwin/arcgis_rest_api/index", "autoapi/src/digitaltwin/data_to_db/index", "autoapi/src/digitaltwin/get_data_using_geoapis/index", "autoapi/src/digitaltwin/index", "autoapi/src/digitaltwin/instructions_records_to_db/index", "autoapi/src/digitaltwin/retrieve_from_instructions/index", "autoapi/src/digitaltwin/setup_environment/index", "autoapi/src/digitaltwin/tables/index", "autoapi/src/digitaltwin/utils/index", "autoapi/src/geoserver/database_layers/index", "autoapi/src/geoserver/geoserver_common/index", "autoapi/src/geoserver/index", "autoapi/src/geoserver/netcdf_layers/index", "autoapi/src/geoserver/raster_layers/index", "autoapi/src/index", "autoapi/src/run_all/index", "autoapi/src/tasks/index", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["autoapi/floodresilience/blueprint/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hirds_rainfall_data_from_db/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hirds_rainfall_data_to_db/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/hyetograph/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/main_rainfall/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_data_from_hirds/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_enum/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_model_input/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/rainfall_sites/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/rainfall/thiessen_polygons/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/align_rec_osm/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/hydrograph/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/main_river/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/osm_waterways/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_data_from_niwa/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_data_to_from_db/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_enum/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_inflows/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_model_input/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_network_for_aoi/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/river/river_network_to_from_db/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/main_tide_slr/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/sea_level_rise_data/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_data_from_niwa/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_enum/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_query_location/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_slr_combine/index.rst", "autoapi/floodresilience/dynamic_boundary_conditions/tide/tide_slr_model_input/index.rst", "autoapi/floodresilience/flood_model/bg_flood_model/index.rst", "autoapi/floodresilience/flood_model/flood_scenario_process_service/index.rst", "autoapi/floodresilience/flood_model/flooded_buildings/index.rst", "autoapi/floodresilience/flood_model/index.rst", "autoapi/floodresilience/flood_model/process_hydro_dem/index.rst", "autoapi/floodresilience/flood_model/serve_model/index.rst", "autoapi/floodresilience/index.rst", "autoapi/floodresilience/run_all/index.rst", "autoapi/floodresilience/tables/index.rst", "autoapi/floodresilience/tasks/index.rst", "autoapi/index.rst", "autoapi/src/app/index.rst", "autoapi/src/check_celery_alive/index.rst", "autoapi/src/config/index.rst", "autoapi/src/digitaltwin/arcgis_rest_api/index.rst", "autoapi/src/digitaltwin/data_to_db/index.rst", "autoapi/src/digitaltwin/get_data_using_geoapis/index.rst", "autoapi/src/digitaltwin/index.rst", "autoapi/src/digitaltwin/instructions_records_to_db/index.rst", "autoapi/src/digitaltwin/retrieve_from_instructions/index.rst", "autoapi/src/digitaltwin/setup_environment/index.rst", "autoapi/src/digitaltwin/tables/index.rst", "autoapi/src/digitaltwin/utils/index.rst", "autoapi/src/geoserver/database_layers/index.rst", "autoapi/src/geoserver/geoserver_common/index.rst", "autoapi/src/geoserver/index.rst", "autoapi/src/geoserver/netcdf_layers/index.rst", "autoapi/src/geoserver/raster_layers/index.rst", "autoapi/src/index.rst", "autoapi/src/run_all/index.rst", "autoapi/src/tasks/index.rst", "index.rst"], "indexentries": {"__table_args__ (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.__table_args__", false]], "__table_args__ (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "src.digitaltwin.tables.GeospatialLayers.__table_args__", false]], "__tablename__ (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.__tablename__", false], [40, "id11", false]], "__tablename__ (floodresilience.tables.buildingfloodstatus attribute)": [[40, "floodresilience.tables.BuildingFloodStatus.__tablename__", false], [40, "id17", false]], "__tablename__ (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.__tablename__", false], [40, "id5", false]], "__tablename__ (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.__tablename__", false], [40, "id0", false]], "__tablename__ (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id0", false], [53, "src.digitaltwin.tables.GeospatialLayers.__tablename__", false]], "__tablename__ (src.digitaltwin.tables.userloginfo attribute)": [[53, "id8", false], [53, "src.digitaltwin.tables.UserLogInfo.__tablename__", false]], "__version__ (in module floodresilience)": [[38, "floodresilience.__version__", false]], "__version__ (in module src)": [[60, "src.__version__", false]], "_dem_dir (src.config.envvariable attribute)": [[45, "src.config.EnvVariable._DEM_DIR", false]], "_fetch_geo_data() (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api._fetch_geo_data", false]], "_get_bool_env_variable() (in module src.config)": [[45, "src.config._get_bool_env_variable", false]], "_get_env_variable() (in module src.config)": [[45, "src.config._get_env_variable", false]], "_handler() (floodresilience.flood_model.flood_scenario_process_service.floodscenarioprocessservice static method)": [[33, "floodresilience.flood_model.flood_scenario_process_service.FloodScenarioProcessService._handler", false]], "_instructions_file (src.config.envvariable attribute)": [[45, "src.config.EnvVariable._INSTRUCTIONS_FILE", false]], "_land_file (src.config.envvariable attribute)": [[45, "src.config.EnvVariable._LAND_FILE", false]], "_lidar_dir (src.config.envvariable attribute)": [[45, "src.config.EnvVariable._LIDAR_DIR", false]], "_xml_header (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model._xml_header", false]], "_xml_header (in module src.geoserver.database_layers)": [[55, "src.geoserver.database_layers._xml_header", false]], "_xml_header (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common._xml_header", false]], "_xml_header (in module src.geoserver.netcdf_layers)": [[58, "src.geoserver.netcdf_layers._xml_header", false]], "_xml_header (in module src.geoserver.raster_layers)": [[59, "src.geoserver.raster_layers._xml_header", false]], "add_absent_edges_to_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_absent_edges_to_network", false]], "add_base_data_to_db() (in module src.tasks)": [[62, "src.tasks.add_base_data_to_db", false]], "add_crs_to_model_output() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.add_crs_to_model_output", false]], "add_each_site_rainfall_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.add_each_site_rainfall_data", false]], "add_edge_directions_to_network_data() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_edge_directions_to_network_data", false]], "add_gtiff_to_geoserver() (in module src.geoserver)": [[57, "src.geoserver.add_gtiff_to_geoserver", false]], "add_gtiff_to_geoserver() (in module src.geoserver.raster_layers)": [[59, "src.geoserver.raster_layers.add_gtiff_to_geoserver", false]], "add_initial_edges_to_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_initial_edges_to_network", false]], "add_model_output_to_geoserver() (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.add_model_output_to_geoserver", false]], "add_nc_to_geoserver() (in module src.geoserver)": [[57, "src.geoserver.add_nc_to_geoserver", false]], "add_nc_to_geoserver() (in module src.geoserver.netcdf_layers)": [[58, "src.geoserver.netcdf_layers.add_nc_to_geoserver", false]], "add_network_exclusions_to_db() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.add_network_exclusions_to_db", false]], "add_nodes_intersection_type() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_nodes_intersection_type", false]], "add_nodes_to_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_nodes_to_network", false]], "add_nodes_to_rec() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.add_nodes_to_rec", false]], "add_rainfall_data_to_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.add_rainfall_data_to_db", false]], "add_slr_to_tide() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine)": [[30, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine.add_slr_to_tide", false]], "add_time_information() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.add_time_information", false]], "add_time_information() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.add_time_information", false]], "align_rec_with_osm() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.align_rec_with_osm", false]], "alt_block (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.hyetomethod attribute)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.HyetoMethod.ALT_BLOCK", false], [8, "id0", false]], "api_url (in module src.app)": [[43, "src.app.API_URL", false]], "app (in module src.app)": [[43, "src.app.app", false]], "app (in module src.tasks)": [[62, "src.tasks.app", false]], "approachtype (class in floodresilience.dynamic_boundary_conditions.tide.tide_enum)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.ApproachType", false]], "base (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.Base", false]], "base (in module src.digitaltwin.setup_environment)": [[52, "src.digitaltwin.setup_environment.Base", false]], "base (in module src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.Base", false]], "bgfloodmodeloutput (class in floodresilience.tables)": [[40, "floodresilience.tables.BGFloodModelOutput", false]], "blockstructure (class in floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure", false]], "boundtype (class in floodresilience.dynamic_boundary_conditions.river.river_enum)": [[19, "floodresilience.dynamic_boundary_conditions.river.river_enum.BoundType", false]], "build_rec_river_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.build_rec_river_network", false]], "building_flood_status_catalog() (in module floodresilience.flood_model.flood_scenario_process_service)": [[33, "floodresilience.flood_model.flood_scenario_process_service.building_flood_status_catalog", false]], "building_outline_id (floodresilience.tables.buildingfloodstatus attribute)": [[40, "floodresilience.tables.BuildingFloodStatus.building_outline_id", false], [40, "id19", false]], "buildingfloodstatus (class in floodresilience.tables)": [[40, "floodresilience.tables.BuildingFloodStatus", false]], "cast_str_to_bool() (in module src.config)": [[45, "src.config.cast_str_to_bool", false]], "categorise_buildings_as_flooded() (in module floodresilience.flood_model.flooded_buildings)": [[34, "floodresilience.flood_model.flooded_buildings.categorise_buildings_as_flooded", false]], "categorize_exploded_multi_intersect() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.categorize_exploded_multi_intersect", false]], "category (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.blockstructure attribute)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure.category", false], [7, "id3", false]], "check_celery_alive() (in module src.check_celery_alive)": [[44, "src.check_celery_alive.check_celery_alive", false]], "check_table_exists() (in module src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.check_table_exists", false]], "chicago (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.hyetomethod attribute)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.HyetoMethod.CHICAGO", false], [8, "id1", false]], "clean_fetched_vector_data() (in module src.digitaltwin.get_data_using_geoapis)": [[48, "src.digitaltwin.get_data_using_geoapis.clean_fetched_vector_data", false]], "clean_rec_inflow_data() (in module floodresilience.dynamic_boundary_conditions.river.hydrograph)": [[13, "floodresilience.dynamic_boundary_conditions.river.hydrograph.clean_rec_inflow_data", false]], "configure_osm_cache() (in module floodresilience.dynamic_boundary_conditions.river.osm_waterways)": [[16, "floodresilience.dynamic_boundary_conditions.river.osm_waterways.configure_osm_cache", false]], "convert_nc_to_geoserver_compatible() (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.convert_nc_to_geoserver_compatible", false]], "convert_nc_to_gtiff() (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.convert_nc_to_gtiff", false]], "convert_to_nz_timezone() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.convert_to_nz_timezone", false]], "convert_to_tabular_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.convert_to_tabular_data", false]], "coverage_area (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id6", false], [53, "src.digitaltwin.tables.GeospatialLayers.coverage_area", false]], "create_building_database_views_if_not_exists() (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.create_building_database_views_if_not_exists", false]], "create_building_layers() (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.create_building_layers", false]], "create_datastore_layer() (in module src.geoserver)": [[57, "src.geoserver.create_datastore_layer", false]], "create_datastore_layer() (in module src.geoserver.database_layers)": [[55, "src.geoserver.database_layers.create_datastore_layer", false]], "create_db_store_if_not_exists() (in module src.geoserver)": [[57, "src.geoserver.create_db_store_if_not_exists", false]], "create_db_store_if_not_exists() (in module src.geoserver.database_layers)": [[55, "src.geoserver.database_layers.create_db_store_if_not_exists", false]], "create_layer_from_gtiff_store() (in module src.geoserver.raster_layers)": [[59, "src.geoserver.raster_layers.create_layer_from_gtiff_store", false]], "create_layer_from_nc_store() (in module src.geoserver.netcdf_layers)": [[58, "src.geoserver.netcdf_layers.create_layer_from_nc_store", false]], "create_model_for_area() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.create_model_for_area", false]], "create_rain_data_cube() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.create_rain_data_cube", false]], "create_sample_polygon() (in module src.run_all)": [[61, "src.run_all.create_sample_polygon", false]], "create_table() (in module src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.create_table", false]], "create_viridis_style_if_not_exists() (in module src.geoserver)": [[57, "src.geoserver.create_viridis_style_if_not_exists", false]], "create_viridis_style_if_not_exists() (in module src.geoserver.raster_layers)": [[59, "src.geoserver.raster_layers.create_viridis_style_if_not_exists", false]], "create_workspace_if_not_exists() (in module src.geoserver)": [[57, "src.geoserver.create_workspace_if_not_exists", false]], "create_workspace_if_not_exists() (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.create_workspace_if_not_exists", false]], "created_at (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.created_at", false], [40, "id15", false]], "created_at (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.created_at", false], [40, "id9", false]], "created_at (src.digitaltwin.tables.userloginfo attribute)": [[53, "id11", false], [53, "src.digitaltwin.tables.UserLogInfo.created_at", false]], "critical (src.digitaltwin.utils.loglevel attribute)": [[54, "id0", false], [54, "src.digitaltwin.utils.LogLevel.CRITICAL", false]], "data_dir (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.DATA_DIR", false]], "data_dir_geoserver (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.DATA_DIR_GEOSERVER", false]], "data_dir_model_output (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.DATA_DIR_MODEL_OUTPUT", false]], "data_provider (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id2", false], [53, "src.digitaltwin.tables.GeospatialLayers.data_provider", false]], "datumtype (class in floodresilience.dynamic_boundary_conditions.tide.tide_enum)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.DatumType", false]], "db_rain_table_name() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.db_rain_table_name", false]], "debug (src.digitaltwin.utils.loglevel attribute)": [[54, "id4", false], [54, "src.digitaltwin.utils.LogLevel.DEBUG", false]], "debug_traceback (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.DEBUG_TRACEBACK", false]], "default_modules_to_parameters (in module floodresilience.run_all)": [[39, "floodresilience.run_all.DEFAULT_MODULES_TO_PARAMETERS", false]], "depths (floodresilience.tasks.depthtimeplot attribute)": [[41, "floodresilience.tasks.DepthTimePlot.depths", false], [41, "id0", false]], "depthtimeplot (class in floodresilience.tasks)": [[41, "floodresilience.tasks.DepthTimePlot", false]], "determine_multi_intersect_inflow_index() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.determine_multi_intersect_inflow_index", false]], "ensure_lidar_datasets_initialised() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.ensure_lidar_datasets_initialised", false]], "ensure_lidar_datasets_initialised() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.ensure_lidar_datasets_initialised", false]], "envvariable (class in src.config)": [[45, "src.config.EnvVariable", false]], "error (src.digitaltwin.utils.loglevel attribute)": [[54, "id1", false], [54, "src.digitaltwin.utils.LogLevel.ERROR", false]], "exclusion_cause (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.exclusion_cause", false], [40, "id3", false]], "execute_query() (in module src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.execute_query", false]], "extract_valid_ari_values() (in module floodresilience.dynamic_boundary_conditions.river.hydrograph)": [[13, "floodresilience.dynamic_boundary_conditions.river.hydrograph.extract_valid_ari_values", false]], "fetch_arcgis_rest_api_data() (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.fetch_arcgis_rest_api_data", false]], "fetch_backup_rec_data_from_niwa() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.fetch_backup_rec_data_from_niwa", false]], "fetch_geo_data_for_aoi() (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.fetch_geo_data_for_aoi", false]], "fetch_osm_waterways() (in module floodresilience.dynamic_boundary_conditions.river.osm_waterways)": [[16, "floodresilience.dynamic_boundary_conditions.river.osm_waterways.fetch_osm_waterways", false]], "fetch_rec_data() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.fetch_rec_data", false]], "fetch_rec_data_for_nz() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.fetch_rec_data_for_nz", false]], "fetch_rec_data_from_niwa() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.fetch_rec_data_from_niwa", false]], "fetch_tide_data() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.fetch_tide_data", false]], "fetch_tide_data_around_highest_tide() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.fetch_tide_data_around_highest_tide", false]], "fetch_tide_data_for_requested_period() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.fetch_tide_data_for_requested_period", false]], "fetch_tide_data_from_niwa() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.fetch_tide_data_from_niwa", false]], "fetch_vector_data_using_geoapis() (in module src.digitaltwin.get_data_using_geoapis)": [[48, "src.digitaltwin.get_data_using_geoapis.fetch_vector_data_using_geoapis", false]], "file_name (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.file_name", false], [40, "id13", false]], "file_path (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.file_path", false], [40, "id14", false]], "filter_for_duration() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db)": [[2, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db.filter_for_duration", false]], "find_flooded_buildings() (in module floodresilience.flood_model.flooded_buildings)": [[34, "floodresilience.flood_model.flooded_buildings.find_flooded_buildings", false]], "flood_depth_catalog() (in module floodresilience.flood_model.flood_scenario_process_service)": [[33, "floodresilience.flood_model.flood_scenario_process_service.flood_depth_catalog", false]], "flood_model_dir (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.FLOOD_MODEL_DIR", false]], "flood_model_id (floodresilience.tables.buildingfloodstatus attribute)": [[40, "floodresilience.tables.BuildingFloodStatus.flood_model_id", false], [40, "id21", false]], "flood_resilience_blueprint (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.flood_resilience_blueprint", false]], "floodresilience": [[38, "module-floodresilience", false]], "floodresilience.blueprint": [[0, "module-floodresilience.blueprint", false]], "floodresilience.dynamic_boundary_conditions": [[1, "module-floodresilience.dynamic_boundary_conditions", false]], "floodresilience.dynamic_boundary_conditions.rainfall": [[5, "module-floodresilience.dynamic_boundary_conditions.rainfall", false]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db": [[2, "module-floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db", false]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db": [[3, "module-floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db", false]], "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph": [[4, "module-floodresilience.dynamic_boundary_conditions.rainfall.hyetograph", false]], "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall": [[6, "module-floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall", false]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds": [[7, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds", false]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum": [[8, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum", false]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input": [[9, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input", false]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites": [[10, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites", false]], "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons": [[11, "module-floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons", false]], "floodresilience.dynamic_boundary_conditions.river": [[14, "module-floodresilience.dynamic_boundary_conditions.river", false]], "floodresilience.dynamic_boundary_conditions.river.align_rec_osm": [[12, "module-floodresilience.dynamic_boundary_conditions.river.align_rec_osm", false]], "floodresilience.dynamic_boundary_conditions.river.hydrograph": [[13, "module-floodresilience.dynamic_boundary_conditions.river.hydrograph", false]], "floodresilience.dynamic_boundary_conditions.river.main_river": [[15, "module-floodresilience.dynamic_boundary_conditions.river.main_river", false]], "floodresilience.dynamic_boundary_conditions.river.osm_waterways": [[16, "module-floodresilience.dynamic_boundary_conditions.river.osm_waterways", false]], "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa": [[17, "module-floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa", false]], "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db": [[18, "module-floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db", false]], "floodresilience.dynamic_boundary_conditions.river.river_enum": [[19, "module-floodresilience.dynamic_boundary_conditions.river.river_enum", false]], "floodresilience.dynamic_boundary_conditions.river.river_inflows": [[20, "module-floodresilience.dynamic_boundary_conditions.river.river_inflows", false]], "floodresilience.dynamic_boundary_conditions.river.river_model_input": [[21, "module-floodresilience.dynamic_boundary_conditions.river.river_model_input", false]], "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi": [[22, "module-floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi", false]], "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db": [[23, "module-floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db", false]], "floodresilience.dynamic_boundary_conditions.tide": [[24, "module-floodresilience.dynamic_boundary_conditions.tide", false]], "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr": [[25, "module-floodresilience.dynamic_boundary_conditions.tide.main_tide_slr", false]], "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data": [[26, "module-floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data", false]], "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa": [[27, "module-floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa", false]], "floodresilience.dynamic_boundary_conditions.tide.tide_enum": [[28, "module-floodresilience.dynamic_boundary_conditions.tide.tide_enum", false]], "floodresilience.dynamic_boundary_conditions.tide.tide_query_location": [[29, "module-floodresilience.dynamic_boundary_conditions.tide.tide_query_location", false]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine": [[30, "module-floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine", false]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input": [[31, "module-floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input", false]], "floodresilience.flood_model": [[35, "module-floodresilience.flood_model", false]], "floodresilience.flood_model.bg_flood_model": [[32, "module-floodresilience.flood_model.bg_flood_model", false]], "floodresilience.flood_model.flood_scenario_process_service": [[33, "module-floodresilience.flood_model.flood_scenario_process_service", false]], "floodresilience.flood_model.flooded_buildings": [[34, "module-floodresilience.flood_model.flooded_buildings", false]], "floodresilience.flood_model.process_hydro_dem": [[36, "module-floodresilience.flood_model.process_hydro_dem", false]], "floodresilience.flood_model.serve_model": [[37, "module-floodresilience.flood_model.serve_model", false]], "floodresilience.run_all": [[39, "module-floodresilience.run_all", false]], "floodresilience.tables": [[40, "module-floodresilience.tables", false]], "floodresilience.tasks": [[41, "module-floodresilience.tasks", false]], "floodscenarioprocessservice (class in floodresilience.flood_model.flood_scenario_process_service)": [[33, "floodresilience.flood_model.flood_scenario_process_service.FloodScenarioProcessService", false]], "funcargst (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.FuncArgsT", false]], "funckwargst (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.FuncKwargsT", false]], "funcreturnt (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.FuncReturnT", false]], "gen_query_param_list() (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.gen_query_param_list", false]], "gen_rec_query_param_list() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.gen_rec_query_param_list", false]], "gen_tide_query_param_list() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.gen_tide_query_param_list", false]], "generate_rain_model_input() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.generate_rain_model_input", false]], "generate_rainfall_inputs() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.generate_rainfall_inputs", false]], "generate_river_inputs() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.generate_river_inputs", false]], "generate_river_model_input() (in module floodresilience.dynamic_boundary_conditions.river.river_model_input)": [[21, "floodresilience.dynamic_boundary_conditions.river.river_model_input.generate_river_model_input", false]], "generate_tide_inputs() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.generate_tide_inputs", false]], "generate_uniform_boundary_input() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input)": [[31, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input.generate_uniform_boundary_input", false]], "geometry (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.geometry", false], [40, "id16", false]], "geometry (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.geometry", false], [40, "id10", false]], "geometry (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.geometry", false], [40, "id4", false]], "geometry (src.digitaltwin.tables.userloginfo attribute)": [[53, "id12", false], [53, "src.digitaltwin.tables.UserLogInfo.geometry", false]], "geometry_names (src.digitaltwin.get_data_using_geoapis.mfe attribute)": [[48, "src.digitaltwin.get_data_using_geoapis.MFE.GEOMETRY_NAMES", false]], "geoserver_admin_name (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_ADMIN_NAME", false]], "geoserver_admin_password (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_ADMIN_PASSWORD", false]], "geoserver_host (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_HOST", false]], "geoserver_internal_host (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_INTERNAL_HOST", false]], "geoserver_internal_port (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_INTERNAL_PORT", false]], "geoserver_port (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.GEOSERVER_PORT", false]], "geospatiallayers (class in src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.GeospatialLayers", false]], "get_catchment_area() (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.get_catchment_area", false]], "get_catchment_boundary_centroids() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_catchment_boundary_centroids", false]], "get_catchment_boundary_info() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_catchment_boundary_info", false]], "get_catchment_boundary_lines() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_catchment_boundary_lines", false]], "get_closest_slr_data() (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.get_closest_slr_data", false]], "get_combined_tide_slr_data() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine)": [[30, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine.get_combined_tide_slr_data", false]], "get_connection_from_profile() (in module src.digitaltwin.setup_environment)": [[52, "src.digitaltwin.setup_environment.get_connection_from_profile", false]], "get_data_from_hirds() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.get_data_from_hirds", false]], "get_database() (in module src.digitaltwin.setup_environment)": [[52, "src.digitaltwin.setup_environment.get_database", false]], "get_date_ranges() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_date_ranges", false]], "get_depth_by_time_at_point() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.get_depth_by_time_at_point", false]], "get_elevations_near_rec_entry_point() (in module floodresilience.dynamic_boundary_conditions.river.river_inflows)": [[20, "floodresilience.dynamic_boundary_conditions.river.river_inflows.get_elevations_near_rec_entry_point", false]], "get_engine() (in module src.digitaltwin.setup_environment)": [[52, "src.digitaltwin.setup_environment.get_engine", false]], "get_existing_geospatial_layers() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.get_existing_geospatial_layers", false]], "get_existing_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.get_existing_network", false]], "get_existing_network_metadata_from_db() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.get_existing_network_metadata_from_db", false]], "get_exploded_multi_intersect() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_exploded_multi_intersect", false]], "get_feature_layer_record_counts() (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.get_feature_layer_record_counts", false]], "get_feature_layer_record_counts() (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.get_feature_layer_record_counts", false]], "get_geoserver_url() (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.get_geoserver_url", false]], "get_geospatial_layer_info() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.get_geospatial_layer_info", false]], "get_highest_tide_date_span() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_highest_tide_date_span", false]], "get_highest_tide_datetime() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_highest_tide_datetime", false]], "get_highest_tide_datetime_span() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_highest_tide_datetime_span", false]], "get_hirds_headers() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites)": [[10, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites.get_hirds_headers", false]], "get_hydro_dem_boundary_lines() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.get_hydro_dem_boundary_lines", false]], "get_hydrograph_data() (in module floodresilience.dynamic_boundary_conditions.river.hydrograph)": [[13, "floodresilience.dynamic_boundary_conditions.river.hydrograph.get_hydrograph_data", false]], "get_hyetograph_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.get_hyetograph_data", false]], "get_interp_incremental_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.get_interp_incremental_data", false]], "get_interpolated_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.get_interpolated_data", false]], "get_interpolated_slr_scenario_data() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine)": [[30, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine.get_interpolated_slr_scenario_data", false]], "get_layout_structure_of_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.get_layout_structure_of_data", false]], "get_min_elevation_river_input_point() (in module floodresilience.dynamic_boundary_conditions.river.river_inflows)": [[20, "floodresilience.dynamic_boundary_conditions.river.river_inflows.get_min_elevation_river_input_point", false]], "get_model_extents_bbox() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.get_model_extents_bbox", false]], "get_model_output_filepath_from_model_id() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.get_model_output_filepath_from_model_id", false]], "get_model_output_metadata() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.get_model_output_metadata", false]], "get_multi_intersect_inflows() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_multi_intersect_inflows", false]], "get_network_output_metadata() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.get_network_output_metadata", false]], "get_new_model_output_path() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.get_new_model_output_path", false]], "get_new_network_output_paths() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.get_new_network_output_paths", false]], "get_next_network_id() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.get_next_network_id", false]], "get_non_existing_records() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.get_non_existing_records", false]], "get_non_intersection_area_from_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.get_non_intersection_area_from_db", false]], "get_non_intersection_centroid_position() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_non_intersection_centroid_position", false]], "get_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.get_non_nz_geospatial_layers", false]], "get_nz_boundary() (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.get_nz_boundary", false]], "get_nz_coastline_from_db() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_nz_coastline_from_db", false]], "get_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.get_nz_geospatial_layers", false]], "get_one_site_rainfall_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db)": [[2, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db.get_one_site_rainfall_data", false]], "get_osm_waterways_data() (in module floodresilience.dynamic_boundary_conditions.river.osm_waterways)": [[16, "floodresilience.dynamic_boundary_conditions.river.osm_waterways.get_osm_waterways_data", false]], "get_osm_waterways_on_bbox() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_osm_waterways_on_bbox", false]], "get_query_loc_coords_position() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_query_loc_coords_position", false]], "get_rainfall_sites_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites)": [[10, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites.get_rainfall_sites_data", false]], "get_rainfall_sites_in_df() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites)": [[10, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites.get_rainfall_sites_in_df", false]], "get_rec_data_with_sdc_from_db() (in module floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db)": [[18, "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db.get_rec_data_with_sdc_from_db", false]], "get_rec_inflow_scenario_data() (in module floodresilience.dynamic_boundary_conditions.river.hydrograph)": [[13, "floodresilience.dynamic_boundary_conditions.river.hydrograph.get_rec_inflow_scenario_data", false]], "get_rec_inflows_aligned_to_osm() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_rec_inflows_aligned_to_osm", false]], "get_rec_inflows_on_bbox() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_rec_inflows_on_bbox", false]], "get_rec_inflows_with_input_points() (in module floodresilience.dynamic_boundary_conditions.river.river_inflows)": [[20, "floodresilience.dynamic_boundary_conditions.river.river_inflows.get_rec_inflows_with_input_points", false]], "get_rec_network_data_on_bbox() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_rec_network_data_on_bbox", false]], "get_rec_river_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.get_rec_river_network", false]], "get_regional_council_clipped_from_db() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_regional_council_clipped_from_db", false]], "get_sdc_data_from_db() (in module floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db)": [[18, "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db.get_sdc_data_from_db", false]], "get_single_intersect_inflows() (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.get_single_intersect_inflows", false]], "get_site_ids_in_catchment() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.get_site_ids_in_catchment", false]], "get_site_ids_not_in_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.get_site_ids_not_in_db", false]], "get_site_url_key() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.get_site_url_key", false]], "get_sites_within_aoi() (in module floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons)": [[11, "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons.get_sites_within_aoi", false]], "get_slr_data_from_db() (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.get_slr_data_from_db", false]], "get_slr_data_from_takiwa() (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.get_slr_data_from_takiwa", false]], "get_slr_scenario_data() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine)": [[30, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine.get_slr_scenario_data", false]], "get_storm_length_increment_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.get_storm_length_increment_data", false]], "get_tide_data() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_tide_data", false]], "get_tide_query_locations() (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.get_tide_query_locations", false]], "get_time_mins_to_add() (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.get_time_mins_to_add", false]], "get_transposed_data() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.get_transposed_data", false]], "get_unique_nodes_dict() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.get_unique_nodes_dict", false]], "get_valid_bg_flood_dir() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.get_valid_bg_flood_dir", false]], "get_valid_parameters_based_on_confidence_level() (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.get_valid_parameters_based_on_confidence_level", false]], "get_valid_parameters_based_on_confidence_level() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.get_valid_parameters_based_on_confidence_level", false]], "get_vector_data_id_not_in_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.get_vector_data_id_not_in_db", false]], "gunicorn_logger (in module src.app)": [[43, "src.app.gunicorn_logger", false]], "health_check() (in module src.app)": [[43, "src.app.health_check", false]], "hyetograph() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.hyetograph", false]], "hyetograph_data_wide_to_long() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.hyetograph_data_wide_to_long", false]], "hyetograph_depth_to_intensity() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.hyetograph_depth_to_intensity", false]], "hyetomethod (class in floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.HyetoMethod", false]], "identify_absent_edges_to_add() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.identify_absent_edges_to_add", false]], "index() (in module src.app)": [[43, "src.app.index", false]], "info (src.digitaltwin.utils.loglevel attribute)": [[54, "id3", false], [54, "src.digitaltwin.utils.LogLevel.INFO", false]], "invalid_reason (floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.validationresult attribute)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.ValidationResult.invalid_reason", false], [25, "id1", false]], "is_flooded (floodresilience.tables.buildingfloodstatus attribute)": [[40, "floodresilience.tables.BuildingFloodStatus.is_flooded", false], [40, "id20", false]], "is_valid (floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.validationresult attribute)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.ValidationResult.is_valid", false], [25, "id0", false]], "king_tide (floodresilience.dynamic_boundary_conditions.tide.tide_enum.approachtype attribute)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.ApproachType.KING_TIDE", false], [28, "id2", false]], "lat (floodresilience.dynamic_boundary_conditions.tide.tide_enum.datumtype attribute)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.DatumType.LAT", false], [28, "id0", false]], "layer_id (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id3", false], [53, "src.digitaltwin.tables.GeospatialLayers.layer_id", false]], "linz_api_key (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.LINZ_API_KEY", false]], "log (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db)": [[2, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites)": [[10, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons)": [[11, "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.align_rec_osm)": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.hydrograph)": [[13, "floodresilience.dynamic_boundary_conditions.river.hydrograph.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.main_river)": [[15, "floodresilience.dynamic_boundary_conditions.river.main_river.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.osm_waterways)": [[16, "floodresilience.dynamic_boundary_conditions.river.osm_waterways.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db)": [[18, "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_inflows)": [[20, "floodresilience.dynamic_boundary_conditions.river.river_inflows.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_model_input)": [[21, "floodresilience.dynamic_boundary_conditions.river.river_model_input.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.tide_query_location)": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine)": [[30, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine.log", false]], "log (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input)": [[31, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input.log", false]], "log (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.log", false]], "log (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.log", false]], "log (in module floodresilience.flood_model.serve_model)": [[37, "floodresilience.flood_model.serve_model.log", false]], "log (in module floodresilience.tasks)": [[41, "floodresilience.tasks.log", false]], "log (in module src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.log", false]], "log (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.log", false]], "log (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.log", false]], "log (in module src.digitaltwin.setup_environment)": [[52, "src.digitaltwin.setup_environment.log", false]], "log (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.log", false]], "log (in module src.geoserver.database_layers)": [[55, "src.geoserver.database_layers.log", false]], "log (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.log", false]], "log (in module src.geoserver.raster_layers)": [[59, "src.geoserver.raster_layers.log", false]], "log (in module src.tasks)": [[62, "src.tasks.log", false]], "log_execution_info() (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.log_execution_info", false]], "loglevel (class in src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.LogLevel", false]], "lower (floodresilience.dynamic_boundary_conditions.river.river_enum.boundtype attribute)": [[19, "floodresilience.dynamic_boundary_conditions.river.river_enum.BoundType.LOWER", false], [19, "id0", false]], "main() (in module floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall)": [[6, "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall.main", false]], "main() (in module floodresilience.dynamic_boundary_conditions.river.main_river)": [[15, "floodresilience.dynamic_boundary_conditions.river.main_river.main", false]], "main() (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.main", false]], "main() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.main", false]], "main() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.main", false]], "main() (in module src.digitaltwin.retrieve_from_instructions)": [[51, "src.digitaltwin.retrieve_from_instructions.main", false]], "main() (in module src.run_all)": [[61, "src.run_all.main", false]], "max_record_count (floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.recordcounts attribute)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.RecordCounts.max_record_count", false], [17, "id0", false]], "max_record_count (src.digitaltwin.arcgis_rest_api.recordcounts attribute)": [[46, "id0", false], [46, "src.digitaltwin.arcgis_rest_api.RecordCounts.max_record_count", false]], "mean_catchment_rainfall() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.mean_catchment_rainfall", false]], "message_broker_host (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.MESSAGE_BROKER_HOST", false]], "message_broker_url (in module src.tasks)": [[62, "src.tasks.message_broker_url", false]], "mfe (class in src.digitaltwin.get_data_using_geoapis)": [[48, "src.digitaltwin.get_data_using_geoapis.MFE", false]], "mfe_api_key (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.MFE_API_KEY", false]], "middle (floodresilience.dynamic_boundary_conditions.river.river_enum.boundtype attribute)": [[19, "floodresilience.dynamic_boundary_conditions.river.river_enum.BoundType.MIDDLE", false], [19, "id1", false]], "model_extents_from_db_by_id() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.model_extents_from_db_by_id", false]], "model_output_from_db_by_id() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.model_output_from_db_by_id", false]], "modify_slr_data_from_takiwa() (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.modify_slr_data_from_takiwa", false]], "module": [[0, "module-floodresilience.blueprint", false], [1, "module-floodresilience.dynamic_boundary_conditions", false], [2, "module-floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db", false], [3, "module-floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db", false], [4, "module-floodresilience.dynamic_boundary_conditions.rainfall.hyetograph", false], [5, "module-floodresilience.dynamic_boundary_conditions.rainfall", false], [6, "module-floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall", false], [7, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds", false], [8, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum", false], [9, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input", false], [10, "module-floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites", false], [11, "module-floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons", false], [12, "module-floodresilience.dynamic_boundary_conditions.river.align_rec_osm", false], [13, "module-floodresilience.dynamic_boundary_conditions.river.hydrograph", false], [14, "module-floodresilience.dynamic_boundary_conditions.river", false], [15, "module-floodresilience.dynamic_boundary_conditions.river.main_river", false], [16, "module-floodresilience.dynamic_boundary_conditions.river.osm_waterways", false], [17, "module-floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa", false], [18, "module-floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db", false], [19, "module-floodresilience.dynamic_boundary_conditions.river.river_enum", false], [20, "module-floodresilience.dynamic_boundary_conditions.river.river_inflows", false], [21, "module-floodresilience.dynamic_boundary_conditions.river.river_model_input", false], [22, "module-floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi", false], [23, "module-floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db", false], [24, "module-floodresilience.dynamic_boundary_conditions.tide", false], [25, "module-floodresilience.dynamic_boundary_conditions.tide.main_tide_slr", false], [26, "module-floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data", false], [27, "module-floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa", false], [28, "module-floodresilience.dynamic_boundary_conditions.tide.tide_enum", false], [29, "module-floodresilience.dynamic_boundary_conditions.tide.tide_query_location", false], [30, "module-floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine", false], [31, "module-floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input", false], [32, "module-floodresilience.flood_model.bg_flood_model", false], [33, "module-floodresilience.flood_model.flood_scenario_process_service", false], [34, "module-floodresilience.flood_model.flooded_buildings", false], [35, "module-floodresilience.flood_model", false], [36, "module-floodresilience.flood_model.process_hydro_dem", false], [37, "module-floodresilience.flood_model.serve_model", false], [38, "module-floodresilience", false], [39, "module-floodresilience.run_all", false], [40, "module-floodresilience.tables", false], [41, "module-floodresilience.tasks", false], [43, "module-src.app", false], [44, "module-src.check_celery_alive", false], [45, "module-src.config", false], [46, "module-src.digitaltwin.arcgis_rest_api", false], [47, "module-src.digitaltwin.data_to_db", false], [48, "module-src.digitaltwin.get_data_using_geoapis", false], [49, "module-src.digitaltwin", false], [50, "module-src.digitaltwin.instructions_records_to_db", false], [51, "module-src.digitaltwin.retrieve_from_instructions", false], [52, "module-src.digitaltwin.setup_environment", false], [53, "module-src.digitaltwin.tables", false], [54, "module-src.digitaltwin.utils", false], [55, "module-src.geoserver.database_layers", false], [56, "module-src.geoserver.geoserver_common", false], [57, "module-src.geoserver", false], [58, "module-src.geoserver.netcdf_layers", false], [59, "module-src.geoserver.raster_layers", false], [60, "module-src", false], [61, "module-src.run_all", false], [62, "module-src.tasks", false]], "msl (floodresilience.dynamic_boundary_conditions.tide.tide_enum.datumtype attribute)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.DatumType.MSL", false], [28, "id1", false]], "netloc_api (src.digitaltwin.get_data_using_geoapis.mfe attribute)": [[48, "src.digitaltwin.get_data_using_geoapis.MFE.NETLOC_API", false]], "network_data_path (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.network_data_path", false], [40, "id8", false]], "network_path (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.network_path", false], [40, "id7", false]], "niwa_api_key (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.NIWA_API_KEY", false]], "non_nz_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.non_nz_geospatial_layers_data_to_db", false]], "nononintersectionerror": [[47, "src.digitaltwin.data_to_db.NoNonIntersectionError", false]], "noriverdataexception": [[12, "floodresilience.dynamic_boundary_conditions.river.align_rec_osm.NoRiverDataException", false]], "notidedataexception": [[29, "floodresilience.dynamic_boundary_conditions.tide.tide_query_location.NoTideDataException", false]], "notset (src.digitaltwin.utils.loglevel attribute)": [[54, "id5", false], [54, "src.digitaltwin.utils.LogLevel.NOTSET", false]], "nz_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.nz_geospatial_layers_data_to_db", false]], "objectid (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.objectid", false], [40, "id2", false]], "on_failure() (src.tasks.onfailurestatetask method)": [[62, "src.tasks.OnFailureStateTask.on_failure", false]], "on_startup() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.on_startup", false]], "onfailurestatetask (class in src.tasks)": [[62, "src.tasks.OnFailureStateTask", false]], "period_tide (floodresilience.dynamic_boundary_conditions.tide.tide_enum.approachtype attribute)": [[28, "floodresilience.dynamic_boundary_conditions.tide.tide_enum.ApproachType.PERIOD_TIDE", false], [28, "id3", false]], "polygonize_flooded_area() (in module floodresilience.flood_model.flooded_buildings)": [[34, "floodresilience.flood_model.flooded_buildings.polygonize_flooded_area", false]], "postgres_db (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.POSTGRES_DB", false]], "postgres_host (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.POSTGRES_HOST", false]], "postgres_password (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.POSTGRES_PASSWORD", false]], "postgres_port (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.POSTGRES_PORT", false]], "postgres_user (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.POSTGRES_USER", false]], "prepare_bg_flood_model_inputs() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.prepare_bg_flood_model_inputs", false]], "prepare_network_data_for_construction() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.prepare_network_data_for_construction", false]], "process_boundary_input_files() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.process_boundary_input_files", false]], "process_dem() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.process_dem", false]], "process_dem() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.process_dem", false]], "process_descriptor (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.process_descriptor", false]], "process_existing_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.process_existing_non_nz_geospatial_layers", false]], "process_new_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.process_new_non_nz_geospatial_layers", false]], "process_rain_input_files() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.process_rain_input_files", false]], "process_river_input_files() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.process_river_input_files", false]], "processes (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.processes", false]], "query_time_dimension() (in module floodresilience.flood_model.flood_scenario_process_service)": [[33, "floodresilience.flood_model.flood_scenario_process_service.query_time_dimension", false]], "rainfall_data_from_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db)": [[2, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db.rainfall_data_from_db", false]], "rainfall_data_to_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db)": [[3, "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db.rainfall_data_to_db", false]], "rainfall_sites_to_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites)": [[10, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites.rainfall_sites_to_db", false]], "raininputtype (class in floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.RainInputType", false]], "rcp (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.blockstructure attribute)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure.rcp", false], [7, "id1", false]], "read_and_check_instructions_file() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.read_and_check_instructions_file", false]], "rec_api_url (in module floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.REC_API_URL", false]], "rec_network_id (floodresilience.tables.rivernetwork attribute)": [[40, "floodresilience.tables.RiverNetwork.rec_network_id", false], [40, "id6", false]], "rec_network_id (floodresilience.tables.rivernetworkexclusions attribute)": [[40, "floodresilience.tables.RiverNetworkExclusions.rec_network_id", false], [40, "id1", false]], "recordcounts (class in floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.RecordCounts", false]], "recordcounts (class in src.digitaltwin.arcgis_rest_api)": [[46, "src.digitaltwin.arcgis_rest_api.RecordCounts", false]], "refresh_lidar_data_sources() (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.refresh_lidar_data_sources", false]], "refresh_lidar_datasets() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.refresh_lidar_datasets", false]], "refresh_lidar_datasets() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.refresh_lidar_datasets", false]], "remove_existing_boundary_inputs() (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.remove_existing_boundary_inputs", false]], "remove_existing_boundary_inputs() (in module floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input)": [[31, "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input.remove_existing_boundary_inputs", false]], "remove_existing_rain_inputs() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.remove_existing_rain_inputs", false]], "remove_existing_river_inputs() (in module floodresilience.dynamic_boundary_conditions.river.river_model_input)": [[21, "floodresilience.dynamic_boundary_conditions.river.river_model_input.remove_existing_river_inputs", false]], "remove_unconnected_edges_from_network() (in module floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi)": [[22, "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi.remove_unconnected_edges_from_network", false]], "retrieve_building_outlines() (in module floodresilience.flood_model.flooded_buildings)": [[34, "floodresilience.flood_model.flooded_buildings.retrieve_building_outlines", false]], "retrieve_hydro_dem_info() (in module floodresilience.flood_model.process_hydro_dem)": [[36, "floodresilience.flood_model.process_hydro_dem.retrieve_hydro_dem_info", false]], "retry_function() (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.retry_function", false]], "rivernetwork (class in floodresilience.tables)": [[40, "floodresilience.tables.RiverNetwork", false]], "rivernetworkexclusions (class in floodresilience.tables)": [[40, "floodresilience.tables.RiverNetworkExclusions", false]], "run_bg_flood_model() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.run_bg_flood_model", false]], "run_flood_model() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.run_flood_model", false]], "sample_polygon (in module floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall)": [[6, "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall.sample_polygon", false]], "sample_polygon (in module floodresilience.dynamic_boundary_conditions.river.main_river)": [[15, "floodresilience.dynamic_boundary_conditions.river.main_river.sample_polygon", false]], "sample_polygon (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.sample_polygon", false]], "sample_polygon (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.sample_polygon", false]], "sample_polygon (in module floodresilience.run_all)": [[39, "floodresilience.run_all.sample_polygon", false]], "sample_polygon (in module src.digitaltwin.retrieve_from_instructions)": [[51, "src.digitaltwin.retrieve_from_instructions.sample_polygon", false]], "send_create_layer_request() (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.send_create_layer_request", false]], "service (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.service", false]], "setup_logging() (in module src.digitaltwin.utils)": [[54, "src.digitaltwin.utils.setup_logging", false]], "sites_coverage_in_catchment() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.sites_coverage_in_catchment", false]], "sites_voronoi_intersect_catchment() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.sites_voronoi_intersect_catchment", false]], "skip_rows (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.blockstructure attribute)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure.skip_rows", false], [7, "id0", false]], "source_table_list (src.digitaltwin.tables.userloginfo attribute)": [[53, "id10", false], [53, "src.digitaltwin.tables.UserLogInfo.source_table_list", false]], "spatial_uniform_rain_input() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.spatial_uniform_rain_input", false]], "spatial_varying_rain_input() (in module floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input)": [[9, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input.spatial_varying_rain_input", false]], "src": [[60, "module-src", false]], "src.app": [[43, "module-src.app", false]], "src.check_celery_alive": [[44, "module-src.check_celery_alive", false]], "src.config": [[45, "module-src.config", false]], "src.digitaltwin": [[49, "module-src.digitaltwin", false]], "src.digitaltwin.arcgis_rest_api": [[46, "module-src.digitaltwin.arcgis_rest_api", false]], "src.digitaltwin.data_to_db": [[47, "module-src.digitaltwin.data_to_db", false]], "src.digitaltwin.get_data_using_geoapis": [[48, "module-src.digitaltwin.get_data_using_geoapis", false]], "src.digitaltwin.instructions_records_to_db": [[50, "module-src.digitaltwin.instructions_records_to_db", false]], "src.digitaltwin.retrieve_from_instructions": [[51, "module-src.digitaltwin.retrieve_from_instructions", false]], "src.digitaltwin.setup_environment": [[52, "module-src.digitaltwin.setup_environment", false]], "src.digitaltwin.tables": [[53, "module-src.digitaltwin.tables", false]], "src.digitaltwin.utils": [[54, "module-src.digitaltwin.utils", false]], "src.geoserver": [[57, "module-src.geoserver", false]], "src.geoserver.database_layers": [[55, "module-src.geoserver.database_layers", false]], "src.geoserver.geoserver_common": [[56, "module-src.geoserver.geoserver_common", false]], "src.geoserver.netcdf_layers": [[58, "module-src.geoserver.netcdf_layers", false]], "src.geoserver.raster_layers": [[59, "module-src.geoserver.raster_layers", false]], "src.run_all": [[61, "module-src.run_all", false]], "src.tasks": [[62, "module-src.tasks", false]], "statsnz_api_key (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.STATSNZ_API_KEY", false]], "store_flooded_buildings_in_database() (in module floodresilience.flood_model.flooded_buildings)": [[34, "floodresilience.flood_model.flooded_buildings.store_flooded_buildings_in_database", false]], "store_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.store_geospatial_layers_data_to_db", false]], "store_instructions_records_to_db() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.store_instructions_records_to_db", false]], "store_model_output_metadata_to_db() (in module floodresilience.flood_model.bg_flood_model)": [[32, "floodresilience.flood_model.bg_flood_model.store_model_output_metadata_to_db", false]], "store_rec_data_to_db() (in module floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db)": [[18, "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db.store_rec_data_to_db", false]], "store_rec_network_to_db() (in module floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db)": [[23, "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db.store_rec_network_to_db", false]], "store_slr_data_to_db() (in module floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data)": [[26, "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data.store_slr_data_to_db", false]], "style_exists() (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.style_exists", false]], "swagger_ui_blueprint (in module src.app)": [[43, "src.app.swagger_ui_blueprint", false]], "swagger_url (in module src.app)": [[43, "src.app.SWAGGER_URL", false]], "table_name (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id4", false], [53, "src.digitaltwin.tables.GeospatialLayers.table_name", false]], "test_database_integration (src.config.envvariable attribute)": [[45, "src.config.EnvVariable.TEST_DATABASE_INTEGRATION", false]], "thiessen_polygons_calculator() (in module floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons)": [[11, "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons.thiessen_polygons_calculator", false]], "thiessen_polygons_from_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons)": [[11, "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons.thiessen_polygons_from_db", false]], "thiessen_polygons_to_db() (in module floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons)": [[11, "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons.thiessen_polygons_to_db", false]], "tide_api_url_data (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.TIDE_API_URL_DATA", false]], "tide_api_url_data_csv (in module floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa)": [[27, "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa.TIDE_API_URL_DATA_CSV", false]], "time_period (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.blockstructure attribute)": [[7, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure.time_period", false], [7, "id2", false]], "times (floodresilience.tasks.depthtimeplot attribute)": [[41, "floodresilience.tasks.DepthTimePlot.times", false], [41, "id1", false]], "total_record_count (floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.recordcounts attribute)": [[17, "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.RecordCounts.total_record_count", false], [17, "id1", false]], "total_record_count (src.digitaltwin.arcgis_rest_api.recordcounts attribute)": [[46, "id1", false], [46, "src.digitaltwin.arcgis_rest_api.RecordCounts.total_record_count", false]], "transform_data_for_selected_method() (in module floodresilience.dynamic_boundary_conditions.rainfall.hyetograph)": [[4, "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph.transform_data_for_selected_method", false]], "uniform (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.raininputtype attribute)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.RainInputType.UNIFORM", false], [8, "id2", false]], "unique_column_name (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id5", false], [53, "src.digitaltwin.tables.GeospatialLayers.unique_column_name", false]], "unique_id (floodresilience.tables.bgfloodmodeloutput attribute)": [[40, "floodresilience.tables.BGFloodModelOutput.unique_id", false], [40, "id12", false]], "unique_id (floodresilience.tables.buildingfloodstatus attribute)": [[40, "floodresilience.tables.BuildingFloodStatus.unique_id", false], [40, "id18", false]], "unique_id (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id1", false], [53, "src.digitaltwin.tables.GeospatialLayers.unique_id", false]], "unique_id (src.digitaltwin.tables.userloginfo attribute)": [[53, "id9", false], [53, "src.digitaltwin.tables.UserLogInfo.unique_id", false]], "upload_file_to_store() (in module src.geoserver.geoserver_common)": [[56, "src.geoserver.geoserver_common.upload_file_to_store", false]], "upper (floodresilience.dynamic_boundary_conditions.river.river_enum.boundtype attribute)": [[19, "floodresilience.dynamic_boundary_conditions.river.river_enum.BoundType.UPPER", false], [19, "id2", false]], "url (src.digitaltwin.tables.geospatiallayers attribute)": [[53, "id7", false], [53, "src.digitaltwin.tables.GeospatialLayers.url", false]], "user_log_info_to_db() (in module src.digitaltwin.data_to_db)": [[47, "src.digitaltwin.data_to_db.user_log_info_to_db", false]], "userloginfo (class in src.digitaltwin.tables)": [[53, "src.digitaltwin.tables.UserLogInfo", false]], "validate_instruction_fields() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.validate_instruction_fields", false]], "validate_slr_parameters() (in module floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.validate_slr_parameters", false]], "validate_slr_parameters() (in module floodresilience.tasks)": [[41, "floodresilience.tasks.validate_slr_parameters", false]], "validate_url_reachability() (in module src.digitaltwin.instructions_records_to_db)": [[50, "src.digitaltwin.instructions_records_to_db.validate_url_reachability", false]], "validationresult (class in floodresilience.dynamic_boundary_conditions.tide.main_tide_slr)": [[25, "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.ValidationResult", false]], "varying (floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.raininputtype attribute)": [[8, "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.RainInputType.VARYING", false], [8, "id3", false]], "warning (src.digitaltwin.utils.loglevel attribute)": [[54, "id2", false], [54, "src.digitaltwin.utils.LogLevel.WARNING", false]], "wkt_to_gdf() (in module src.tasks)": [[62, "src.tasks.wkt_to_gdf", false]], "wps() (in module floodresilience.blueprint)": [[0, "floodresilience.blueprint.wps", false]]}, "objects": {"": [[38, 0, 0, "-", "floodresilience"], [60, 0, 0, "-", "src"]], "floodresilience": [[38, 1, 1, "", "__version__"], [0, 0, 0, "-", "blueprint"], [1, 0, 0, "-", "dynamic_boundary_conditions"], [35, 0, 0, "-", "flood_model"], [39, 0, 0, "-", "run_all"], [40, 0, 0, "-", "tables"], [41, 0, 0, "-", "tasks"]], "floodresilience.blueprint": [[0, 1, 1, "", "flood_resilience_blueprint"], [0, 1, 1, "", "process_descriptor"], [0, 1, 1, "", "processes"], [0, 2, 1, "", "refresh_lidar_data_sources"], [0, 1, 1, "", "service"], [0, 2, 1, "", "wps"]], "floodresilience.dynamic_boundary_conditions": [[5, 0, 0, "-", "rainfall"], [14, 0, 0, "-", "river"], [24, 0, 0, "-", "tide"]], "floodresilience.dynamic_boundary_conditions.rainfall": [[2, 0, 0, "-", "hirds_rainfall_data_from_db"], [3, 0, 0, "-", "hirds_rainfall_data_to_db"], [4, 0, 0, "-", "hyetograph"], [6, 0, 0, "-", "main_rainfall"], [7, 0, 0, "-", "rainfall_data_from_hirds"], [8, 0, 0, "-", "rainfall_enum"], [9, 0, 0, "-", "rainfall_model_input"], [10, 0, 0, "-", "rainfall_sites"], [11, 0, 0, "-", "thiessen_polygons"]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db": [[2, 2, 1, "", "filter_for_duration"], [2, 2, 1, "", "get_one_site_rainfall_data"], [2, 1, 1, "", "log"], [2, 2, 1, "", "rainfall_data_from_db"]], "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db": [[3, 2, 1, "", "add_each_site_rainfall_data"], [3, 2, 1, "", "add_rainfall_data_to_db"], [3, 2, 1, "", "db_rain_table_name"], [3, 2, 1, "", "get_site_ids_in_catchment"], [3, 2, 1, "", "get_site_ids_not_in_db"], [3, 1, 1, "", "log"], [3, 2, 1, "", "rainfall_data_to_db"]], "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph": [[4, 2, 1, "", "add_time_information"], [4, 2, 1, "", "get_hyetograph_data"], [4, 2, 1, "", "get_interp_incremental_data"], [4, 2, 1, "", "get_interpolated_data"], [4, 2, 1, "", "get_storm_length_increment_data"], [4, 2, 1, "", "get_transposed_data"], [4, 2, 1, "", "hyetograph"], [4, 2, 1, "", "hyetograph_data_wide_to_long"], [4, 2, 1, "", "hyetograph_depth_to_intensity"], [4, 2, 1, "", "transform_data_for_selected_method"]], "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall": [[6, 2, 1, "", "main"], [6, 1, 1, "", "sample_polygon"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds": [[7, 3, 1, "", "BlockStructure"], [7, 2, 1, "", "convert_to_tabular_data"], [7, 2, 1, "", "get_data_from_hirds"], [7, 2, 1, "", "get_layout_structure_of_data"], [7, 2, 1, "", "get_site_url_key"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds.BlockStructure": [[7, 4, 1, "id3", "category"], [7, 4, 1, "id1", "rcp"], [7, 4, 1, "id0", "skip_rows"], [7, 4, 1, "id2", "time_period"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum": [[8, 3, 1, "", "HyetoMethod"], [8, 3, 1, "", "RainInputType"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.HyetoMethod": [[8, 4, 1, "id0", "ALT_BLOCK"], [8, 4, 1, "id1", "CHICAGO"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum.RainInputType": [[8, 4, 1, "id2", "UNIFORM"], [8, 4, 1, "id3", "VARYING"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input": [[9, 2, 1, "", "create_rain_data_cube"], [9, 2, 1, "", "generate_rain_model_input"], [9, 1, 1, "", "log"], [9, 2, 1, "", "mean_catchment_rainfall"], [9, 2, 1, "", "remove_existing_rain_inputs"], [9, 2, 1, "", "sites_coverage_in_catchment"], [9, 2, 1, "", "sites_voronoi_intersect_catchment"], [9, 2, 1, "", "spatial_uniform_rain_input"], [9, 2, 1, "", "spatial_varying_rain_input"]], "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites": [[10, 2, 1, "", "get_hirds_headers"], [10, 2, 1, "", "get_rainfall_sites_data"], [10, 2, 1, "", "get_rainfall_sites_in_df"], [10, 1, 1, "", "log"], [10, 2, 1, "", "rainfall_sites_to_db"]], "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons": [[11, 2, 1, "", "get_sites_within_aoi"], [11, 1, 1, "", "log"], [11, 2, 1, "", "thiessen_polygons_calculator"], [11, 2, 1, "", "thiessen_polygons_from_db"], [11, 2, 1, "", "thiessen_polygons_to_db"]], "floodresilience.dynamic_boundary_conditions.river": [[12, 0, 0, "-", "align_rec_osm"], [13, 0, 0, "-", "hydrograph"], [15, 0, 0, "-", "main_river"], [16, 0, 0, "-", "osm_waterways"], [17, 0, 0, "-", "river_data_from_niwa"], [18, 0, 0, "-", "river_data_to_from_db"], [19, 0, 0, "-", "river_enum"], [20, 0, 0, "-", "river_inflows"], [21, 0, 0, "-", "river_model_input"], [22, 0, 0, "-", "river_network_for_aoi"], [23, 0, 0, "-", "river_network_to_from_db"]], "floodresilience.dynamic_boundary_conditions.river.align_rec_osm": [[12, 5, 1, "", "NoRiverDataException"], [12, 2, 1, "", "align_rec_with_osm"], [12, 2, 1, "", "categorize_exploded_multi_intersect"], [12, 2, 1, "", "determine_multi_intersect_inflow_index"], [12, 2, 1, "", "get_exploded_multi_intersect"], [12, 2, 1, "", "get_multi_intersect_inflows"], [12, 2, 1, "", "get_osm_waterways_on_bbox"], [12, 2, 1, "", "get_rec_inflows_aligned_to_osm"], [12, 2, 1, "", "get_rec_inflows_on_bbox"], [12, 2, 1, "", "get_rec_network_data_on_bbox"], [12, 2, 1, "", "get_single_intersect_inflows"], [12, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.river.hydrograph": [[13, 2, 1, "", "clean_rec_inflow_data"], [13, 2, 1, "", "extract_valid_ari_values"], [13, 2, 1, "", "get_hydrograph_data"], [13, 2, 1, "", "get_rec_inflow_scenario_data"], [13, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.river.main_river": [[15, 1, 1, "", "log"], [15, 2, 1, "", "main"], [15, 1, 1, "", "sample_polygon"]], "floodresilience.dynamic_boundary_conditions.river.osm_waterways": [[16, 2, 1, "", "configure_osm_cache"], [16, 2, 1, "", "fetch_osm_waterways"], [16, 2, 1, "", "get_osm_waterways_data"], [16, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa": [[17, 1, 1, "", "REC_API_URL"], [17, 3, 1, "", "RecordCounts"], [17, 2, 1, "", "fetch_backup_rec_data_from_niwa"], [17, 2, 1, "", "fetch_rec_data"], [17, 2, 1, "", "fetch_rec_data_for_nz"], [17, 2, 1, "", "fetch_rec_data_from_niwa"], [17, 2, 1, "", "gen_rec_query_param_list"], [17, 2, 1, "", "get_feature_layer_record_counts"], [17, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa.RecordCounts": [[17, 4, 1, "id0", "max_record_count"], [17, 4, 1, "id1", "total_record_count"]], "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db": [[18, 2, 1, "", "get_rec_data_with_sdc_from_db"], [18, 2, 1, "", "get_sdc_data_from_db"], [18, 1, 1, "", "log"], [18, 2, 1, "", "store_rec_data_to_db"]], "floodresilience.dynamic_boundary_conditions.river.river_enum": [[19, 3, 1, "", "BoundType"]], "floodresilience.dynamic_boundary_conditions.river.river_enum.BoundType": [[19, 4, 1, "id0", "LOWER"], [19, 4, 1, "id1", "MIDDLE"], [19, 4, 1, "id2", "UPPER"]], "floodresilience.dynamic_boundary_conditions.river.river_inflows": [[20, 2, 1, "", "get_elevations_near_rec_entry_point"], [20, 2, 1, "", "get_min_elevation_river_input_point"], [20, 2, 1, "", "get_rec_inflows_with_input_points"], [20, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.river.river_model_input": [[21, 2, 1, "", "generate_river_model_input"], [21, 1, 1, "", "log"], [21, 2, 1, "", "remove_existing_river_inputs"]], "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi": [[22, 2, 1, "", "add_absent_edges_to_network"], [22, 2, 1, "", "add_edge_directions_to_network_data"], [22, 2, 1, "", "add_initial_edges_to_network"], [22, 2, 1, "", "add_nodes_intersection_type"], [22, 2, 1, "", "add_nodes_to_network"], [22, 2, 1, "", "add_nodes_to_rec"], [22, 2, 1, "", "build_rec_river_network"], [22, 2, 1, "", "get_rec_river_network"], [22, 2, 1, "", "get_unique_nodes_dict"], [22, 2, 1, "", "identify_absent_edges_to_add"], [22, 1, 1, "", "log"], [22, 2, 1, "", "prepare_network_data_for_construction"], [22, 2, 1, "", "remove_unconnected_edges_from_network"]], "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db": [[23, 2, 1, "", "add_network_exclusions_to_db"], [23, 2, 1, "", "get_existing_network"], [23, 2, 1, "", "get_existing_network_metadata_from_db"], [23, 2, 1, "", "get_network_output_metadata"], [23, 2, 1, "", "get_new_network_output_paths"], [23, 2, 1, "", "get_next_network_id"], [23, 1, 1, "", "log"], [23, 2, 1, "", "store_rec_network_to_db"]], "floodresilience.dynamic_boundary_conditions.tide": [[25, 0, 0, "-", "main_tide_slr"], [26, 0, 0, "-", "sea_level_rise_data"], [27, 0, 0, "-", "tide_data_from_niwa"], [28, 0, 0, "-", "tide_enum"], [29, 0, 0, "-", "tide_query_location"], [30, 0, 0, "-", "tide_slr_combine"], [31, 0, 0, "-", "tide_slr_model_input"]], "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr": [[25, 3, 1, "", "ValidationResult"], [25, 2, 1, "", "get_valid_parameters_based_on_confidence_level"], [25, 1, 1, "", "log"], [25, 2, 1, "", "main"], [25, 2, 1, "", "remove_existing_boundary_inputs"], [25, 1, 1, "", "sample_polygon"], [25, 2, 1, "", "validate_slr_parameters"]], "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr.ValidationResult": [[25, 4, 1, "id1", "invalid_reason"], [25, 4, 1, "id0", "is_valid"]], "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data": [[26, 2, 1, "", "get_closest_slr_data"], [26, 2, 1, "", "get_slr_data_from_db"], [26, 2, 1, "", "get_slr_data_from_takiwa"], [26, 1, 1, "", "log"], [26, 2, 1, "", "modify_slr_data_from_takiwa"], [26, 2, 1, "", "store_slr_data_to_db"]], "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa": [[27, 1, 1, "", "TIDE_API_URL_DATA"], [27, 1, 1, "", "TIDE_API_URL_DATA_CSV"], [27, 2, 1, "", "add_time_information"], [27, 2, 1, "", "convert_to_nz_timezone"], [27, 2, 1, "", "fetch_tide_data"], [27, 2, 1, "", "fetch_tide_data_around_highest_tide"], [27, 2, 1, "", "fetch_tide_data_for_requested_period"], [27, 2, 1, "", "fetch_tide_data_from_niwa"], [27, 2, 1, "", "gen_tide_query_param_list"], [27, 2, 1, "", "get_date_ranges"], [27, 2, 1, "", "get_highest_tide_date_span"], [27, 2, 1, "", "get_highest_tide_datetime"], [27, 2, 1, "", "get_highest_tide_datetime_span"], [27, 2, 1, "", "get_query_loc_coords_position"], [27, 2, 1, "", "get_tide_data"], [27, 2, 1, "", "get_time_mins_to_add"], [27, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.tide.tide_enum": [[28, 3, 1, "", "ApproachType"], [28, 3, 1, "", "DatumType"]], "floodresilience.dynamic_boundary_conditions.tide.tide_enum.ApproachType": [[28, 4, 1, "id2", "KING_TIDE"], [28, 4, 1, "id3", "PERIOD_TIDE"]], "floodresilience.dynamic_boundary_conditions.tide.tide_enum.DatumType": [[28, 4, 1, "id0", "LAT"], [28, 4, 1, "id1", "MSL"]], "floodresilience.dynamic_boundary_conditions.tide.tide_query_location": [[29, 5, 1, "", "NoTideDataException"], [29, 2, 1, "", "get_catchment_boundary_centroids"], [29, 2, 1, "", "get_catchment_boundary_info"], [29, 2, 1, "", "get_catchment_boundary_lines"], [29, 2, 1, "", "get_non_intersection_centroid_position"], [29, 2, 1, "", "get_nz_coastline_from_db"], [29, 2, 1, "", "get_regional_council_clipped_from_db"], [29, 2, 1, "", "get_tide_query_locations"], [29, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine": [[30, 2, 1, "", "add_slr_to_tide"], [30, 2, 1, "", "get_combined_tide_slr_data"], [30, 2, 1, "", "get_interpolated_slr_scenario_data"], [30, 2, 1, "", "get_slr_scenario_data"], [30, 1, 1, "", "log"]], "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input": [[31, 2, 1, "", "generate_uniform_boundary_input"], [31, 1, 1, "", "log"], [31, 2, 1, "", "remove_existing_boundary_inputs"]], "floodresilience.flood_model": [[32, 0, 0, "-", "bg_flood_model"], [33, 0, 0, "-", "flood_scenario_process_service"], [34, 0, 0, "-", "flooded_buildings"], [36, 0, 0, "-", "process_hydro_dem"], [37, 0, 0, "-", "serve_model"]], "floodresilience.flood_model.bg_flood_model": [[32, 1, 1, "", "Base"], [32, 2, 1, "", "add_crs_to_model_output"], [32, 2, 1, "", "get_model_output_metadata"], [32, 2, 1, "", "get_new_model_output_path"], [32, 2, 1, "", "get_valid_bg_flood_dir"], [32, 1, 1, "", "log"], [32, 2, 1, "", "main"], [32, 2, 1, "", "model_extents_from_db_by_id"], [32, 2, 1, "", "model_output_from_db_by_id"], [32, 2, 1, "", "prepare_bg_flood_model_inputs"], [32, 2, 1, "", "process_boundary_input_files"], [32, 2, 1, "", "process_rain_input_files"], [32, 2, 1, "", "process_river_input_files"], [32, 2, 1, "", "run_bg_flood_model"], [32, 1, 1, "", "sample_polygon"], [32, 2, 1, "", "store_model_output_metadata_to_db"]], "floodresilience.flood_model.flood_scenario_process_service": [[33, 3, 1, "", "FloodScenarioProcessService"], [33, 2, 1, "", "building_flood_status_catalog"], [33, 2, 1, "", "flood_depth_catalog"], [33, 2, 1, "", "query_time_dimension"]], "floodresilience.flood_model.flood_scenario_process_service.FloodScenarioProcessService": [[33, 6, 1, "", "_handler"]], "floodresilience.flood_model.flooded_buildings": [[34, 2, 1, "", "categorise_buildings_as_flooded"], [34, 2, 1, "", "find_flooded_buildings"], [34, 2, 1, "", "polygonize_flooded_area"], [34, 2, 1, "", "retrieve_building_outlines"], [34, 2, 1, "", "store_flooded_buildings_in_database"]], "floodresilience.flood_model.process_hydro_dem": [[36, 2, 1, "", "ensure_lidar_datasets_initialised"], [36, 2, 1, "", "get_hydro_dem_boundary_lines"], [36, 1, 1, "", "log"], [36, 2, 1, "", "main"], [36, 2, 1, "", "process_dem"], [36, 2, 1, "", "refresh_lidar_datasets"], [36, 2, 1, "", "retrieve_hydro_dem_info"]], "floodresilience.flood_model.serve_model": [[37, 1, 1, "", "_xml_header"], [37, 2, 1, "", "add_model_output_to_geoserver"], [37, 2, 1, "", "convert_nc_to_geoserver_compatible"], [37, 2, 1, "", "convert_nc_to_gtiff"], [37, 2, 1, "", "create_building_database_views_if_not_exists"], [37, 2, 1, "", "create_building_layers"], [37, 1, 1, "", "log"]], "floodresilience.run_all": [[39, 1, 1, "", "DEFAULT_MODULES_TO_PARAMETERS"], [39, 1, 1, "", "sample_polygon"]], "floodresilience.tables": [[40, 3, 1, "", "BGFloodModelOutput"], [40, 3, 1, "", "BuildingFloodStatus"], [40, 3, 1, "", "RiverNetwork"], [40, 3, 1, "", "RiverNetworkExclusions"]], "floodresilience.tables.BGFloodModelOutput": [[40, 4, 1, "id11", "__tablename__"], [40, 4, 1, "id15", "created_at"], [40, 4, 1, "id13", "file_name"], [40, 4, 1, "id14", "file_path"], [40, 4, 1, "id16", "geometry"], [40, 4, 1, "id12", "unique_id"]], "floodresilience.tables.BuildingFloodStatus": [[40, 4, 1, "id17", "__tablename__"], [40, 4, 1, "id19", "building_outline_id"], [40, 4, 1, "id21", "flood_model_id"], [40, 4, 1, "id20", "is_flooded"], [40, 4, 1, "id18", "unique_id"]], "floodresilience.tables.RiverNetwork": [[40, 4, 1, "id5", "__tablename__"], [40, 4, 1, "id9", "created_at"], [40, 4, 1, "id10", "geometry"], [40, 4, 1, "id8", "network_data_path"], [40, 4, 1, "id7", "network_path"], [40, 4, 1, "id6", "rec_network_id"]], "floodresilience.tables.RiverNetworkExclusions": [[40, 4, 1, "", "__table_args__"], [40, 4, 1, "id0", "__tablename__"], [40, 4, 1, "id3", "exclusion_cause"], [40, 4, 1, "id4", "geometry"], [40, 4, 1, "id2", "objectid"], [40, 4, 1, "id1", "rec_network_id"]], "floodresilience.tasks": [[41, 3, 1, "", "DepthTimePlot"], [41, 2, 1, "", "create_model_for_area"], [41, 2, 1, "", "ensure_lidar_datasets_initialised"], [41, 2, 1, "", "generate_rainfall_inputs"], [41, 2, 1, "", "generate_river_inputs"], [41, 2, 1, "", "generate_tide_inputs"], [41, 2, 1, "", "get_depth_by_time_at_point"], [41, 2, 1, "", "get_model_extents_bbox"], [41, 2, 1, "", "get_model_output_filepath_from_model_id"], [41, 2, 1, "", "get_valid_parameters_based_on_confidence_level"], [41, 1, 1, "", "log"], [41, 2, 1, "", "on_startup"], [41, 2, 1, "", "process_dem"], [41, 2, 1, "", "refresh_lidar_datasets"], [41, 2, 1, "", "run_flood_model"], [41, 2, 1, "", "validate_slr_parameters"]], "floodresilience.tasks.DepthTimePlot": [[41, 4, 1, "id0", "depths"], [41, 4, 1, "id1", "times"]], "src": [[60, 1, 1, "", "__version__"], [43, 0, 0, "-", "app"], [44, 0, 0, "-", "check_celery_alive"], [45, 0, 0, "-", "config"], [49, 0, 0, "-", "digitaltwin"], [57, 0, 0, "-", "geoserver"], [61, 0, 0, "-", "run_all"], [62, 0, 0, "-", "tasks"]], "src.app": [[43, 1, 1, "", "API_URL"], [43, 1, 1, "", "SWAGGER_URL"], [43, 1, 1, "", "app"], [43, 1, 1, "", "gunicorn_logger"], [43, 2, 1, "", "health_check"], [43, 2, 1, "", "index"], [43, 1, 1, "", "swagger_ui_blueprint"]], "src.check_celery_alive": [[44, 2, 1, "", "check_celery_alive"]], "src.config": [[45, 3, 1, "", "EnvVariable"], [45, 2, 1, "", "_get_bool_env_variable"], [45, 2, 1, "", "_get_env_variable"], [45, 2, 1, "", "cast_str_to_bool"]], "src.config.EnvVariable": [[45, 4, 1, "", "DATA_DIR"], [45, 4, 1, "", "DATA_DIR_GEOSERVER"], [45, 4, 1, "", "DATA_DIR_MODEL_OUTPUT"], [45, 4, 1, "", "DEBUG_TRACEBACK"], [45, 4, 1, "", "FLOOD_MODEL_DIR"], [45, 4, 1, "", "GEOSERVER_ADMIN_NAME"], [45, 4, 1, "", "GEOSERVER_ADMIN_PASSWORD"], [45, 4, 1, "", "GEOSERVER_HOST"], [45, 4, 1, "", "GEOSERVER_INTERNAL_HOST"], [45, 4, 1, "", "GEOSERVER_INTERNAL_PORT"], [45, 4, 1, "", "GEOSERVER_PORT"], [45, 4, 1, "", "LINZ_API_KEY"], [45, 4, 1, "", "MESSAGE_BROKER_HOST"], [45, 4, 1, "", "MFE_API_KEY"], [45, 4, 1, "", "NIWA_API_KEY"], [45, 4, 1, "", "POSTGRES_DB"], [45, 4, 1, "", "POSTGRES_HOST"], [45, 4, 1, "", "POSTGRES_PASSWORD"], [45, 4, 1, "", "POSTGRES_PORT"], [45, 4, 1, "", "POSTGRES_USER"], [45, 4, 1, "", "STATSNZ_API_KEY"], [45, 4, 1, "", "TEST_DATABASE_INTEGRATION"], [45, 4, 1, "", "_DEM_DIR"], [45, 4, 1, "", "_INSTRUCTIONS_FILE"], [45, 4, 1, "", "_LAND_FILE"], [45, 4, 1, "", "_LIDAR_DIR"]], "src.digitaltwin": [[46, 0, 0, "-", "arcgis_rest_api"], [47, 0, 0, "-", "data_to_db"], [48, 0, 0, "-", "get_data_using_geoapis"], [50, 0, 0, "-", "instructions_records_to_db"], [51, 0, 0, "-", "retrieve_from_instructions"], [52, 0, 0, "-", "setup_environment"], [53, 0, 0, "-", "tables"], [54, 0, 0, "-", "utils"]], "src.digitaltwin.arcgis_rest_api": [[46, 3, 1, "", "RecordCounts"], [46, 2, 1, "", "_fetch_geo_data"], [46, 2, 1, "", "fetch_arcgis_rest_api_data"], [46, 2, 1, "", "fetch_geo_data_for_aoi"], [46, 2, 1, "", "gen_query_param_list"], [46, 2, 1, "", "get_feature_layer_record_counts"], [46, 1, 1, "", "log"]], "src.digitaltwin.arcgis_rest_api.RecordCounts": [[46, 4, 1, "id0", "max_record_count"], [46, 4, 1, "id1", "total_record_count"]], "src.digitaltwin.data_to_db": [[47, 5, 1, "", "NoNonIntersectionError"], [47, 2, 1, "", "get_geospatial_layer_info"], [47, 2, 1, "", "get_non_intersection_area_from_db"], [47, 2, 1, "", "get_non_nz_geospatial_layers"], [47, 2, 1, "", "get_nz_geospatial_layers"], [47, 2, 1, "", "get_vector_data_id_not_in_db"], [47, 1, 1, "", "log"], [47, 2, 1, "", "non_nz_geospatial_layers_data_to_db"], [47, 2, 1, "", "nz_geospatial_layers_data_to_db"], [47, 2, 1, "", "process_existing_non_nz_geospatial_layers"], [47, 2, 1, "", "process_new_non_nz_geospatial_layers"], [47, 2, 1, "", "store_geospatial_layers_data_to_db"], [47, 2, 1, "", "user_log_info_to_db"]], "src.digitaltwin.get_data_using_geoapis": [[48, 3, 1, "", "MFE"], [48, 2, 1, "", "clean_fetched_vector_data"], [48, 2, 1, "", "fetch_vector_data_using_geoapis"]], "src.digitaltwin.get_data_using_geoapis.MFE": [[48, 4, 1, "", "GEOMETRY_NAMES"], [48, 4, 1, "", "NETLOC_API"]], "src.digitaltwin.instructions_records_to_db": [[50, 2, 1, "", "get_existing_geospatial_layers"], [50, 2, 1, "", "get_non_existing_records"], [50, 1, 1, "", "log"], [50, 2, 1, "", "read_and_check_instructions_file"], [50, 2, 1, "", "store_instructions_records_to_db"], [50, 2, 1, "", "validate_instruction_fields"], [50, 2, 1, "", "validate_url_reachability"]], "src.digitaltwin.retrieve_from_instructions": [[51, 2, 1, "", "main"], [51, 1, 1, "", "sample_polygon"]], "src.digitaltwin.setup_environment": [[52, 1, 1, "", "Base"], [52, 2, 1, "", "get_connection_from_profile"], [52, 2, 1, "", "get_database"], [52, 2, 1, "", "get_engine"], [52, 1, 1, "", "log"]], "src.digitaltwin.tables": [[53, 1, 1, "", "Base"], [53, 3, 1, "", "GeospatialLayers"], [53, 3, 1, "", "UserLogInfo"], [53, 2, 1, "", "check_table_exists"], [53, 2, 1, "", "create_table"], [53, 2, 1, "", "execute_query"]], "src.digitaltwin.tables.GeospatialLayers": [[53, 4, 1, "", "__table_args__"], [53, 4, 1, "id0", "__tablename__"], [53, 4, 1, "id6", "coverage_area"], [53, 4, 1, "id2", "data_provider"], [53, 4, 1, "id3", "layer_id"], [53, 4, 1, "id4", "table_name"], [53, 4, 1, "id5", "unique_column_name"], [53, 4, 1, "id1", "unique_id"], [53, 4, 1, "id7", "url"]], "src.digitaltwin.tables.UserLogInfo": [[53, 4, 1, "id8", "__tablename__"], [53, 4, 1, "id11", "created_at"], [53, 4, 1, "id12", "geometry"], [53, 4, 1, "id10", "source_table_list"], [53, 4, 1, "id9", "unique_id"]], "src.digitaltwin.utils": [[54, 1, 1, "", "FuncArgsT"], [54, 1, 1, "", "FuncKwargsT"], [54, 1, 1, "", "FuncReturnT"], [54, 3, 1, "", "LogLevel"], [54, 2, 1, "", "get_catchment_area"], [54, 2, 1, "", "get_nz_boundary"], [54, 1, 1, "", "log"], [54, 2, 1, "", "log_execution_info"], [54, 2, 1, "", "retry_function"], [54, 2, 1, "", "setup_logging"]], "src.digitaltwin.utils.LogLevel": [[54, 4, 1, "id0", "CRITICAL"], [54, 4, 1, "id4", "DEBUG"], [54, 4, 1, "id1", "ERROR"], [54, 4, 1, "id3", "INFO"], [54, 4, 1, "id5", "NOTSET"], [54, 4, 1, "id2", "WARNING"]], "src.geoserver": [[57, 2, 1, "", "add_gtiff_to_geoserver"], [57, 2, 1, "", "add_nc_to_geoserver"], [57, 2, 1, "", "create_datastore_layer"], [57, 2, 1, "", "create_db_store_if_not_exists"], [57, 2, 1, "", "create_viridis_style_if_not_exists"], [57, 2, 1, "", "create_workspace_if_not_exists"], [55, 0, 0, "-", "database_layers"], [56, 0, 0, "-", "geoserver_common"], [58, 0, 0, "-", "netcdf_layers"], [59, 0, 0, "-", "raster_layers"]], "src.geoserver.database_layers": [[55, 1, 1, "", "_xml_header"], [55, 2, 1, "", "create_datastore_layer"], [55, 2, 1, "", "create_db_store_if_not_exists"], [55, 1, 1, "", "log"]], "src.geoserver.geoserver_common": [[56, 1, 1, "", "_xml_header"], [56, 2, 1, "", "create_workspace_if_not_exists"], [56, 2, 1, "", "get_geoserver_url"], [56, 1, 1, "", "log"], [56, 2, 1, "", "send_create_layer_request"], [56, 2, 1, "", "style_exists"], [56, 2, 1, "", "upload_file_to_store"]], "src.geoserver.netcdf_layers": [[58, 1, 1, "", "_xml_header"], [58, 2, 1, "", "add_nc_to_geoserver"], [58, 2, 1, "", "create_layer_from_nc_store"]], "src.geoserver.raster_layers": [[59, 1, 1, "", "_xml_header"], [59, 2, 1, "", "add_gtiff_to_geoserver"], [59, 2, 1, "", "create_layer_from_gtiff_store"], [59, 2, 1, "", "create_viridis_style_if_not_exists"], [59, 1, 1, "", "log"]], "src.run_all": [[61, 2, 1, "", "create_sample_polygon"], [61, 2, 1, "", "main"]], "src.tasks": [[62, 3, 1, "", "OnFailureStateTask"], [62, 2, 1, "", "add_base_data_to_db"], [62, 1, 1, "", "app"], [62, 1, 1, "", "log"], [62, 1, 1, "", "message_broker_url"], [62, 2, 1, "", "wkt_to_gdf"]], "src.tasks.OnFailureStateTask": [[62, 6, 1, "", "on_failure"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:exception", "6": "py:method"}, "terms": {"": [8, 13, 19, 22, 23, 27, 28, 32, 41, 61], "0": [2, 6, 7, 15, 25, 30, 32, 36, 38, 51, 54, 60, 61, 62], "00": 33, "000z": 33, "01": 33, "01t00": 33, "02": 33, "1": [2, 4, 6, 25, 27, 29, 30, 32, 42], "10": [2, 4, 6, 13, 15, 25, 27, 32, 36, 51, 54, 61], "100": [2, 4, 6, 13, 15], "1000": [13, 15], "10m": 2, "120h": 2, "12h": 2, "1440": 27, "160": 27, "17": [25, 30], "175": 27, "180": 27, "1h": 2, "2": [2, 4, 6, 17, 25, 30, 32, 38, 60], "20": [2, 4, 6, 13, 15, 25, 32, 36, 51, 54, 61], "2000": 33, "2031": [2, 6, 7], "2050": [2, 6, 7], "2081": [2, 6, 7], "20m": 2, "2100": [2, 6, 7], "2193": [47, 48, 54], "24h": 2, "250": [2, 4, 6], "29": 27, "2h": 2, "2nd": [25, 41], "30": [2, 4, 6, 15, 25, 27, 32, 36, 51, 54, 61], "300": [12, 20], "30m": 2, "31": 27, "365": 27, "4": [2, 6, 25, 30], "40": [2, 4, 6, 15, 25, 32, 36, 51, 54, 61], "4326": 62, "48h": 2, "5": [2, 4, 6, 7, 13, 15, 25, 30], "50": [2, 4, 6, 13, 15, 25, 30, 32, 36, 51, 54, 61], "53": 27, "543": 27, "58": [2, 4, 6], "6": [2, 6, 7, 25, 30], "60": [2, 4, 6], "6379": 62, "6h": 2, "7": [25, 30], "72h": 2, "8": [2, 6, 25, 30], "80": [2, 4, 6], "83": [25, 30], "876": 27, "9": [25, 30], "96h": 2, "9999": 32, "A": [2, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 36, 41, 46, 47, 48, 51, 53, 54, 61], "For": [27, 32, 45], "If": [2, 4, 11, 12, 13, 17, 20, 25, 27, 29, 30, 32, 36, 37, 40, 41, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 58, 59], "In": 62, "It": [27, 36, 47, 48, 51], "One": 4, "The": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62], "There": 7, "These": [25, 37, 41, 61], "To": [45, 48], "__table_args__": [40, 53], "__tablename__": [40, 53], "__version__": [38, 60, 63], "_arg": 62, "_dem_dir": 45, "_einfo": 62, "_fetch_geo_data": 46, "_get_bool_env_vari": 45, "_get_env_vari": 45, "_handler": 33, "_instructions_fil": 45, "_kwarg": [41, 62], "_land_fil": 45, "_lidar_dir": 45, "_task_id": 62, "_xml_header": [37, 55, 56, 58, 59], "abbrevi": 7, "about": [9, 29, 36], "abov": 32, "absent": 22, "absolut": [23, 32], "accept": 0, "access": [48, 57], "account": 30, "accurar": 61, "across": 9, "ad": [4, 22, 26, 27, 30, 36, 41, 56, 57, 58, 59, 62], "add": [3, 4, 12, 18, 22, 23, 27, 30, 32, 37, 41, 62], "add_absent_edges_to_network": 22, "add_base_data_to_db": 62, "add_crs_to_model_output": 32, "add_each_site_rainfall_data": 3, "add_edge_directions_to_network_data": 22, "add_gtiff_to_geoserv": [57, 59], "add_initial_edges_to_network": 22, "add_model_output_to_geoserv": 37, "add_nc_to_geoserv": [57, 58], "add_network_exclusions_to_db": 23, "add_nodes_intersection_typ": 22, "add_nodes_to_network": 22, "add_nodes_to_rec": 22, "add_rainfall_data_to_db": 3, "add_slr_to_tid": 30, "add_time_inform": [4, 27], "add_vlm": [25, 30], "addit": [18, 22, 23, 25, 26, 30, 34], "addition": 54, "after": 62, "aiohttp": [17, 27, 46], "align": [12, 13, 20], "align_rec_osm": [14, 42], "align_rec_with_osm": 12, "all": [2, 3, 4, 9, 11, 26, 32, 34, 41, 45, 46, 48], "allow": [0, 25, 41, 45, 54, 62], "allow_empti": 45, "along": [12, 13, 20, 22, 23, 36, 47], "alreadi": [37, 47, 53, 55, 56, 57], "also": 47, "alt_block": [6, 8], "altern": 8, "although": 56, "amount": 54, "an": [12, 13, 17, 18, 20, 22, 23, 25, 27, 30, 34, 36, 37, 40, 45, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62], "ani": [11, 54], "annual": 13, "anyth": [55, 56, 57], "aoi": 40, "api": [17, 27, 29, 37, 43, 46, 48], "api_document": 43, "api_url": 43, "app": [42, 60, 62, 63], "append": [22, 34], "appli": 34, "applic": [25, 41, 43], "approach": [27, 28], "approachtyp": [27, 28], "appropri": 18, "ar": [0, 2, 3, 4, 6, 7, 9, 11, 12, 13, 15, 16, 22, 23, 25, 27, 30, 32, 34, 36, 41, 44, 45, 47, 50, 51, 54, 57, 61], "arcgi": [17, 46], "arcgis_rest_api": [42, 49], "area": [2, 3, 4, 6, 9, 11, 12, 15, 16, 18, 20, 22, 23, 25, 29, 32, 34, 36, 40, 41, 46, 47, 51, 53, 54, 61, 62], "area_of_interest": [11, 34, 46, 47], "arg": 54, "argument": [2, 54], "ari": [2, 4, 6, 13, 15], "around": 27, "arrai": 41, "associ": [15, 18, 22, 23, 34, 40, 47, 53, 55, 57, 61], "astronom": [27, 28], "async": [17, 27, 46], "attempt": 45, "attribut": [34, 63], "auto": 42, "autoapi": 42, "autom": 51, "avail": [4, 6, 15, 17, 23, 25, 30, 32, 33, 36, 46, 50, 51, 54, 61], "averag": [2, 4, 6, 9, 13, 15], "backend": [41, 62], "background": [41, 62], "band": [57, 58], "band_nam": [57, 58], "base": [2, 4, 7, 8, 12, 13, 15, 17, 19, 22, 25, 27, 28, 29, 30, 32, 33, 40, 41, 46, 47, 48, 52, 53, 54, 62], "base_data_paramet": 62, "base_retry_delai": 54, "becaus": 41, "becom": 54, "been": [23, 41], "befor": 54, "being": [32, 37, 44, 55, 57, 58, 59, 62], "between": [4, 25, 27, 32, 48, 54], "bg": [6, 8, 9, 12, 13, 15, 20, 21, 25, 29, 31, 32], "bg_flood": 32, "bg_flood_dir": [9, 21, 25, 31, 32], "bg_flood_model": [35, 42], "bg_flood_model_output": 40, "bgfloodmodeloutput": 40, "billiard": 62, "block": [8, 32], "block_structur": 7, "blockstructur": 7, "blueprint": [38, 42, 63], "bodi": [0, 41], "bool": [2, 3, 7, 13, 15, 25, 30, 40, 41, 45, 47, 48, 53, 56, 61], "boolean": [34, 45], "both": [23, 25, 30, 50], "bound": [13, 15, 19, 41, 48], "boundari": [1, 12, 13, 20, 25, 29, 31, 32, 36, 54], "bounding_polygon": 48, "boundtyp": [13, 15, 19], "box": 41, "buffer": 29, "build": [22, 33, 34, 37, 40], "build_rec_river_network": 22, "building_flood_statu": [37, 40], "building_flood_status_catalog": 33, "building_id": 34, "building_outline_id": [34, 40], "building_polygon": 34, "buildingfloodstatu": 40, "cach": 16, "calcul": [9, 11, 12, 22, 27], "call": [17, 27, 37, 46, 54], "callabl": [44, 54], "can": [9, 13, 25, 27, 37, 55, 57], "cannot": [12, 29, 45], "captur": 54, "caseinsensitivedict": 10, "cast": 45, "cast_str_to_bool": 45, "catalog": 33, "catchment": [2, 3, 4, 6, 9, 11, 12, 15, 16, 18, 20, 22, 23, 25, 29, 32, 36, 40, 47, 51, 53, 54, 61], "catchment_area": [9, 11, 12, 16, 18, 20, 22, 23, 29, 32, 36, 47, 54], "categor": 12, "categori": 7, "categorise_buildings_as_flood": 34, "categorize_exploded_multi_intersect": 12, "caught": 54, "caus": [23, 40, 61], "celeri": [0, 41, 44, 62], "cell": 32, "center": 27, "centroid": 29, "chain": 41, "chang": [16, 62], "check": [25, 36, 41, 43, 44, 50, 53, 56], "check_celery_al": [42, 60, 63], "check_table_exist": 53, "chicago": [6, 8], "clean": [4, 48], "clean_fetched_vector_data": 48, "clean_rec_inflow_data": 13, "client": [0, 37, 57, 58, 59], "clientsess": [17, 27, 46], "clip": 29, "closest": 26, "co": [17, 27], "coard": 37, "coastlin": 29, "code": [46, 47, 48, 54], "collect": [34, 45], "color": [57, 59], "column": [4, 9, 12, 13, 18, 22, 27, 29, 47, 53], "com": 48, "combin": [25, 30, 31], "come": 41, "comma": 33, "commun": 41, "complet": [41, 62], "complianc": 37, "compliant": 37, "comput": 32, "concentr": [2, 6, 7], "condit": [1, 20, 32, 36, 41], "confid": [19, 25, 30], "confidence_level": [25, 30, 41], "config": [42, 60, 63], "configur": [0, 45, 52, 54, 55, 57, 60], "configure_osm_cach": 16, "connect": [2, 3, 10, 11, 12, 17, 18, 20, 22, 23, 26, 29, 32, 34, 36, 47, 50, 51, 52, 53, 54, 55, 57], "consid": [30, 34], "construct": [22, 23], "consum": 41, "contain": [0, 2, 4, 7, 9, 10, 11, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 46, 47, 48, 50, 53, 55, 57, 61], "continu": 44, "convent": 37, "convers": 32, "convert": [4, 7, 9, 27, 54], "convert_nc_to_geoserver_compat": 37, "convert_nc_to_gtiff": 37, "convert_to_nz_timezon": 27, "convert_to_tabular_data": 7, "coordin": [20, 22, 26, 27, 32, 47, 48, 54], "copi": 34, "core": 56, "correct": 37, "correspond": [6, 12, 13, 15, 20, 25, 32, 36, 51, 54, 61], "council": 29, "count": [17, 46], "cover": [9, 11, 47], "coverag": [2, 3, 9, 11, 40, 47, 53, 56], "coverage_area": [50, 53], "coverage_payload": 56, "cpu": 32, "cql_filter": 48, "cr": [32, 47, 48, 54, 62], "creat": [4, 9, 11, 15, 22, 33, 34, 36, 37, 40, 41, 42, 52, 53, 55, 56, 57, 58, 59, 61], "create_building_database_views_if_not_exist": 37, "create_building_lay": 37, "create_datastore_lay": [55, 57], "create_db_store_if_not_exist": [55, 57], "create_layer_from_gtiff_stor": 59, "create_layer_from_nc_stor": 58, "create_model_for_area": 41, "create_rain_data_cub": 9, "create_sample_polygon": 61, "create_t": 53, "create_viridis_style_if_not_exist": [57, 59], "create_workspace_if_not_exist": [56, 57], "created_at": [40, 53], "credenti": 52, "critic": [6, 15, 25, 32, 36, 51, 54, 61], "cross": [12, 20], "csv": 27, "cube": 9, "cubic": [4, 30], "cumul": 4, "current": [4, 18, 22, 23, 32, 34, 37, 55, 56, 57], "custom": [55, 57], "dai": 27, "data": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62], "data_dir": 45, "data_dir_geoserv": 45, "data_dir_model_output": 45, "data_provid": [47, 48, 53], "data_store_nam": [37, 55, 57], "data_to_db": [42, 49], "dataarrai": 34, "databas": [2, 3, 4, 6, 10, 11, 12, 15, 17, 18, 20, 22, 23, 25, 26, 29, 32, 34, 36, 37, 40, 41, 47, 50, 51, 52, 53, 54, 55, 57, 62], "database_lay": [42, 57], "datafram": [2, 4, 7, 9, 26, 27, 30, 31, 34, 41, 47, 50], "dataset": [0, 9, 20, 26, 36, 41], "datastor": [37, 55, 57], "date": [0, 27, 36, 41], "date_rang": 27, "datetim": [27, 40, 53], "datum": [27, 28], "datumtyp": [27, 28], "days_per_cal": 27, "db": 52, "db_name": [37, 55, 57], "db_rain_table_nam": 3, "deal": 60, "debug": [6, 15, 25, 32, 36, 51, 54, 61], "debug_traceback": 45, "decor": 44, "deeper": 34, "default": [2, 6, 12, 15, 17, 20, 25, 27, 29, 30, 32, 36, 45, 47, 48, 51, 53, 54], "default_modules_to_paramet": [39, 62], "defin": [16, 22, 33, 36, 41, 44, 56, 58, 59, 61, 62], "definit": 56, "delai": 54, "deliber": 61, "dem": [20, 32, 36, 41], "denot": 29, "depend": [25, 27, 34, 41], "dept": 41, "depth": [2, 3, 4, 7, 33, 34, 37, 41], "depthtimeplot": 41, "describ": 25, "design": 34, "desir": [4, 25, 30], "detail": [25, 26, 30, 34, 48, 50], "detect": 34, "determin": [12, 22, 29], "determine_multi_intersect_inflow_index": 12, "develop": 61, "devic": 32, "dict": [12, 17, 22, 25, 26, 27, 33, 41, 46, 50, 53, 61, 62], "dictionari": [10, 12, 22, 25, 26, 27, 33, 41, 61], "differ": [4, 7, 8, 19, 27, 28, 54], "digit": [0, 38, 39, 43, 61], "digitaltwin": [6, 15, 25, 32, 36, 40, 42, 60, 63], "digraph": [22, 23], "direct": [22, 23], "directli": [57, 60], "directori": [9, 16, 21, 25, 31, 32], "distanc": [12, 13, 20, 29], "distance_km": 29, "distance_m": [12, 20], "do": [18, 37, 47, 55, 57], "doc": 37, "document": 42, "doe": [11, 32, 45, 55, 56, 57], "doesn": 53, "down": 44, "download": [25, 26], "drain": [18, 22], "dt": 37, "durat": [2, 4, 6, 9, 13, 15, 27], "dure": 53, "dynam": [1, 37, 55, 57], "dynamic_boundary_condit": [38, 41, 42, 63], "e": [6, 7, 9, 13, 15, 23, 25, 27, 32, 33, 36, 40, 51, 53, 61], "each": [3, 9, 11, 12, 18, 22, 23, 25, 27, 32, 34, 39, 40, 41, 48, 50, 53, 54, 60, 61], "easili": [25, 41], "edg": [22, 61], "einfo": 62, "either": [9, 13, 27, 36, 50], "element": [32, 55, 57], "elev": [20, 32], "elimin": 22, "ellipsi": 44, "empti": [45, 47, 56], "en": 37, "enabl": [32, 56], "encapsul": 45, "end": [0, 22, 27], "end_datetim": 27, "end_tim": 32, "endpoint": [0, 43], "engin": [2, 3, 10, 11, 12, 17, 18, 20, 22, 23, 26, 29, 32, 34, 36, 47, 50, 52, 53, 54], "enrich": 18, "ensur": [36, 41, 45, 62], "ensure_lidar_datasets_initialis": [36, 41], "entri": [20, 40, 47, 53], "enum": [8, 19, 28, 54, 61], "environ": [45, 48, 52, 56], "envvari": 45, "epsg": [46, 62], "equal": 34, "error": [6, 7, 15, 25, 32, 36, 37, 51, 53, 54, 55, 56, 57, 58, 59, 61], "estim": [7, 13, 15, 19], "etc": [6, 12, 15, 25, 27], "event": [25, 27], "exc": 62, "except": [37, 53, 54, 55, 56, 57, 58, 59, 62], "exceptioninfo": 62, "exclud": [18, 22, 23, 40, 54], "exclus": [23, 40], "exclusion_caus": [23, 40], "execut": [32, 33, 53, 54], "execute_queri": 53, "executerespons": 33, "exist": [9, 21, 23, 25, 31, 37, 45, 47, 50, 53, 55, 56, 57, 58, 59], "existing_layers_df": 50, "existing_network_meta": 23, "exit": 52, "expect": [0, 43, 54], "expected_except": 54, "express": 27, "extend": 54, "extens": [37, 38, 56], "extent": [32, 36], "extract": [13, 20, 36, 47], "extract_valid_ari_valu": 13, "f": [17, 37, 44], "facilit": [57, 58, 59], "fail": [17, 25, 27, 46, 52, 54], "failur": [25, 41, 62], "fals": [2, 3, 7, 13, 15, 25, 30, 45, 47, 48, 53, 56], "featur": [17, 40, 46], "fetch": [6, 7, 10, 15, 16, 17, 25, 26, 27, 29, 36, 37, 45, 46, 47, 48, 51], "fetch_arcgis_rest_api_data": 46, "fetch_backup_rec_data_from_niwa": 17, "fetch_geo_data_for_aoi": 46, "fetch_osm_waterwai": 16, "fetch_rec_data": 17, "fetch_rec_data_for_nz": 17, "fetch_rec_data_from_niwa": 17, "fetch_tide_data": 27, "fetch_tide_data_around_highest_tid": 27, "fetch_tide_data_for_requested_period": 27, "fetch_tide_data_from_niwa": 27, "fetch_vector_data_using_geoapi": 48, "fetched_data": 48, "field": 50, "file": [6, 9, 16, 21, 23, 25, 31, 32, 34, 37, 40, 41, 50, 51, 56, 57, 58, 59], "file_nam": 40, "file_path": 40, "file_to_add": 56, "filenam": [23, 32], "filenotfounderror": 32, "filepath": [37, 41, 56, 57, 58, 59], "filter": 2, "filter_for_dur": 2, "final": 41, "find": [32, 33, 41], "find_flooded_build": 34, "first": [12, 22, 32], "fix": 45, "flask": [0, 43, 44], "float": [2, 4, 6, 7, 13, 15, 25, 27, 32, 34, 36, 41, 54, 61], "flood": [0, 6, 8, 9, 12, 13, 15, 20, 21, 25, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41], "flood_depth_catalog": 33, "flood_depth_threshold": 34, "flood_model": [38, 42, 63], "flood_model_dir": 45, "flood_model_id": [34, 40], "flood_model_output_id": 32, "flood_model_output_path": 34, "flood_polygon": 34, "flood_rast": 34, "flood_resilience_blueprint": 0, "flood_scenario_process_servic": [35, 42], "flood_statistics_henderson_collins_v2": 17, "flooded_build": [35, 42], "flooded_polygon": 34, "floodresili": [42, 63], "floodscenarioprocessservic": 33, "flow": [12, 13, 15, 19], "flow_length_min": [13, 15], "follow": [23, 37, 48], "forc": 7, "foreign": 40, "form": [9, 22, 41, 62], "format": [2, 4, 7, 9, 32, 33, 41, 50, 54], "found": [12, 20, 29, 32, 47], "four": 7, "frame": [47, 50], "fredt": [38, 40], "from": [2, 4, 7, 9, 10, 11, 13, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 31, 32, 34, 37, 40, 41, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62], "frontend": [37, 41, 62], "full": 56, "fulli": [18, 47], "func": 54, "funcargst": 54, "funckwargst": 54, "funcreturnt": 54, "function": 40, "futur": [2, 6, 7], "g": [7, 27, 33, 53], "gase": 7, "gaug": [4, 9], "gen_query_param_list": 46, "gen_rec_query_param_list": 17, "gen_tide_query_param_list": 27, "gener": [4, 6, 9, 10, 13, 15, 17, 21, 22, 25, 27, 30, 31, 32, 37, 42, 46, 48], "generate_rain_model_input": 9, "generate_rainfall_input": 41, "generate_river_input": 41, "generate_river_model_input": 21, "generate_tide_input": 41, "generate_uniform_boundary_input": 31, "geoapi": [47, 48, 51], "geodatafram": [2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 34, 36, 46, 47, 48, 51, 54, 61, 62], "geograph": 46, "geometr": [40, 53], "geometri": [12, 16, 18, 22, 23, 29, 32, 40, 48, 53], "geometry_nam": 48, "geopanda": [2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 34, 36, 46, 47, 48, 51, 54, 61, 62], "geoserv": [32, 33, 37, 42, 60, 63], "geoserver_admin_nam": 45, "geoserver_admin_password": 45, "geoserver_common": [42, 57], "geoserver_host": 45, "geoserver_internal_host": 45, "geoserver_internal_port": 45, "geoserver_port": 45, "geoserver_url": [56, 58, 59], "geospati": [47, 49, 50, 51, 53, 54], "geospatial_lay": [50, 51, 53], "geospatiallay": 53, "geotiff": [37, 56, 57, 59], "get": [3, 4, 7, 9, 10, 11, 23, 25, 27, 29, 30, 32, 34, 36, 41, 43, 47, 50, 52, 54, 57, 58], "get_bool_env_vari": 45, "get_catchment_area": 54, "get_catchment_boundary_centroid": 29, "get_catchment_boundary_info": 29, "get_catchment_boundary_lin": 29, "get_closest_slr_data": 26, "get_combined_tide_slr_data": 30, "get_connection_from_profil": 52, "get_data_from_hird": 7, "get_data_using_geoapi": [42, 49], "get_databas": 52, "get_date_rang": 27, "get_depth_by_time_at_point": 41, "get_elevations_near_rec_entry_point": 20, "get_engin": 52, "get_existing_geospatial_lay": 50, "get_existing_network": 23, "get_existing_network_metadata_from_db": 23, "get_exploded_multi_intersect": 12, "get_feature_layer_record_count": [17, 46], "get_geoserver_url": 56, "get_geospatial_layer_info": 47, "get_highest_tide_date_span": 27, "get_highest_tide_datetim": 27, "get_highest_tide_datetime_span": 27, "get_hirds_head": 10, "get_hydro_dem_boundary_lin": 36, "get_hydrograph_data": 13, "get_hyetograph_data": 4, "get_interp_incremental_data": 4, "get_interpolated_data": 4, "get_interpolated_slr_scenario_data": 30, "get_layout_structure_of_data": 7, "get_min_elevation_river_input_point": 20, "get_model_extents_bbox": 41, "get_model_output_filepath_from_model_id": 41, "get_model_output_metadata": 32, "get_multi_intersect_inflow": 12, "get_network_output_metadata": 23, "get_new_model_output_path": 32, "get_new_network_output_path": 23, "get_next_network_id": 23, "get_non_existing_record": 50, "get_non_intersection_area_from_db": 47, "get_non_intersection_centroid_posit": 29, "get_non_nz_geospatial_lay": 47, "get_nz_boundari": 54, "get_nz_coastline_from_db": 29, "get_nz_geospatial_lay": 47, "get_one_site_rainfall_data": 2, "get_osm_waterways_data": 16, "get_osm_waterways_on_bbox": 12, "get_query_loc_coords_posit": 27, "get_rainfall_sites_data": 10, "get_rainfall_sites_in_df": 10, "get_rec_data_with_sdc_from_db": 18, "get_rec_inflow_scenario_data": 13, "get_rec_inflows_aligned_to_osm": 12, "get_rec_inflows_on_bbox": 12, "get_rec_inflows_with_input_point": 20, "get_rec_network_data_on_bbox": 12, "get_rec_river_network": 22, "get_regional_council_clipped_from_db": 29, "get_sdc_data_from_db": 18, "get_single_intersect_inflow": 12, "get_site_ids_in_catch": 3, "get_site_ids_not_in_db": 3, "get_site_url_kei": 7, "get_sites_within_aoi": 11, "get_slr_data_from_db": 26, "get_slr_data_from_takiwa": 26, "get_slr_scenario_data": 30, "get_storm_length_increment_data": 4, "get_tide_data": 27, "get_tide_query_loc": 29, "get_time_mins_to_add": 27, "get_transposed_data": 4, "get_unique_nodes_dict": 22, "get_valid_bg_flood_dir": 32, "get_valid_parameters_based_on_confidence_level": [25, 41], "get_vector_data_id_not_in_db": 47, "gi": 17, "given": [18, 30, 33, 34, 36, 37, 40, 41, 46, 53, 55, 56, 57, 62], "govt": 48, "gpd": [2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 34, 36, 46, 47, 48, 51, 54, 61, 62], "gpu": 32, "gpu_devic": 32, "graph": [22, 23], "greater": [32, 34], "greatest": [4, 6, 13, 15, 25, 27], "greenhous": 7, "grid": 32, "group": 41, "groupresult": 41, "gs_flood_model_workspac": 33, "gtiff_filepath": [57, 59], "gunicorn_logg": 43, "ha": [25, 41, 61], "half": [4, 13, 27], "handl": [1, 5, 12, 13, 14, 16, 18, 20, 21, 23, 24, 26, 32, 35, 49, 55, 60], "handler": 33, "have": [23, 25, 45, 47, 56], "header": 10, "health": 43, "health_check": 43, "height": 37, "help": 48, "here": 57, "highest": 27, "highest_tide_datetim": 27, "hird": [2, 3, 7, 10], "hirds_rainfall_data_from_db": [5, 42], "hirds_rainfall_data_to_db": [5, 42], "hist": 7, "hist_stderr": 7, "histor": [2, 6, 7], "hold": [36, 41], "host": 52, "hostnam": 52, "hour": [4, 26, 27, 30], "html": 37, "http": [10, 17, 27, 37, 43, 46, 48], "httperror": [37, 55, 56, 57, 58, 59], "hydro": [17, 32, 36], "hydro_dem": 20, "hydro_dem_path": 32, "hydrograph": [14, 21, 42], "hydrograph_data": 21, "hydrolog": [20, 32, 36, 41], "hyeto_method": [4, 6], "hyetograph": [5, 6, 8, 9, 42], "hyetograph_data": [4, 9], "hyetograph_data_wide_to_long": 4, "hyetograph_depth": 4, "hyetograph_depth_to_intens": 4, "hyetomethod": [4, 6, 8], "i": [0, 2, 4, 6, 7, 9, 12, 13, 15, 17, 20, 22, 23, 25, 27, 29, 30, 32, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62], "id": [2, 3, 7, 23, 32, 33, 34, 37, 40, 41, 47, 48, 57, 58, 59], "identif": 47, "identifi": [12, 18, 22, 23, 29, 34, 40, 50, 53], "identify_absent_edges_to_add": 22, "idf": [2, 3, 7], "import": 57, "includ": [9, 13, 15, 16, 20, 25, 29, 30, 32, 48, 61], "inclus": [27, 30], "inconsist": 2, "incorpor": [23, 32], "increas": 7, "increment": 4, "increment_min": [4, 6], "increment_year": [25, 30], "index": [12, 34, 43, 63], "indic": [25, 30, 40, 53, 54], "individu": [4, 12, 20], "inflow": [12, 13, 15, 20, 21], "info": [6, 15, 25, 32, 36, 51, 54, 61], "inform": [4, 9, 11, 18, 22, 25, 26, 27, 29, 30, 36, 41, 47, 51], "initi": [22, 27, 32], "initialis": [36, 41], "input": [6, 8, 9, 13, 15, 20, 21, 22, 25, 31, 32, 33, 41], "input_typ": [6, 9], "insruct": 50, "instanc": [0, 17, 27, 41, 46, 56, 58, 59], "instead": 41, "instruct": [50, 51], "instruction_json_path": [50, 51], "instructions_df": 50, "instructions_records_to_db": [42, 49], "int": [4, 6, 7, 12, 13, 15, 17, 18, 20, 22, 23, 25, 27, 29, 30, 32, 33, 34, 36, 37, 40, 41, 46, 47, 48, 50, 53, 54, 57, 58, 59, 61], "integ": [12, 32, 36], "intens": [2, 3, 4, 7, 9], "intenum": 54, "interact": [4, 46], "interest": [11, 34, 36, 46, 47, 61], "internal_server_error": 44, "interp1d": [4, 30], "interp_catchment_data": 4, "interp_increment_data": 4, "interp_method": [4, 30], "interpol": [4, 25, 30], "interpret": 45, "intersect": [2, 3, 9, 11, 12, 18, 29, 34, 47], "intersection_typ": 22, "interv": [2, 4, 6, 13, 15, 19, 25, 27, 30], "interval_min": [25, 27], "invalid": [13, 25, 27, 30, 50], "invalid_reason": 25, "is_flood": [34, 40], "is_valid": 25, "iso8601": 33, "issu": [17, 46], "item": 33, "iter": [17, 27], "its": [4, 6, 13, 15, 20, 22, 23, 25, 27, 32, 36, 47, 50, 61], "j": 33, "json": [33, 41, 50, 51], "kei": [7, 12, 25, 27, 40, 41, 48, 53], "keyerror": 45, "keyword": 54, "kilomet": 29, "king": 28, "king_tid": [27, 28], "known": [23, 32], "koordin": 48, "kwarg": 54, "land": [25, 30], "last": 22, "lat": [27, 28, 41], "later": [41, 62], "latest": 37, "latitud": [27, 41], "layer": [17, 33, 37, 46, 47, 48, 49, 50, 53, 55, 56, 57, 58, 59], "layer_id": [47, 48, 53], "layer_nam": [33, 55, 56, 57, 58, 59], "layer_row": 47, "layout": 7, "ld": 48, "length": [4, 25, 27], "less": [4, 13, 27], "level": [1, 6, 15, 24, 25, 26, 27, 28, 30, 31, 32, 36, 38, 41, 51, 54, 61], "librari": [47, 48, 51, 54], "lidar": [0, 36, 41], "line": [7, 20, 29, 36], "linear": [4, 30], "linestr": [16, 22, 36, 40], "link": [0, 36, 41, 63], "linz": 48, "linz_api_kei": 45, "list": [3, 7, 12, 13, 17, 27, 33, 41, 46, 53], "ll": 48, "lng": 41, "load": 57, "locat": [4, 11, 20, 26, 27, 29, 30, 41], "log": [2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 36, 37, 41, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62], "log_execution_info": 54, "log_level": [6, 15, 25, 32, 36, 51, 54], "logger": [6, 15, 25, 32, 36, 51, 54, 61], "loglevel": [6, 15, 25, 32, 36, 51, 54, 61], "long": [0, 4, 27, 36, 41, 62], "longitud": [27, 41], "low": [25, 30], "lower": [13, 15, 19], "lowest": [20, 27, 28], "m": 41, "maf": [13, 15], "mai": 56, "main": [6, 15, 25, 32, 36, 43, 51, 61], "main_rainfal": [5, 42], "main_riv": [14, 42], "main_tide_slr": [24, 41, 42], "make": [10, 17, 27, 46, 48, 56, 58, 59], "manag": [23, 48, 60], "mandatori": [13, 15], "manipul": 54, "map": [34, 54], "mapserv": 17, "mask": 32, "match": [12, 20, 34, 40, 56], "math": 40, "max": 37, "max_record_count": [17, 46], "max_retri": 54, "maximum": [4, 6, 13, 15, 17, 25, 27, 46, 54], "mean": [9, 13, 19, 27, 28], "mean_catchment_rainfal": 9, "measur": [9, 27], "medium": [25, 30], "messag": [25, 47, 48, 54], "message_brok": 41, "message_broker_host": 45, "message_broker_url": 62, "metadata": [0, 23, 32, 36, 41, 55, 57], "metadata_elem": [55, 57], "meter": [12, 20, 32], "method": [0, 4, 6, 8, 9, 30, 43], "metric": 32, "mfe": 48, "mfe_api_kei": 45, "middl": [13, 15, 19], "minimum": [4, 27, 34], "minut": [4, 6, 13, 15, 25, 26, 27, 30], "model": [6, 8, 9, 12, 13, 15, 20, 21, 25, 29, 31, 32, 33, 34, 35, 37, 40, 41, 53, 57, 58, 59, 60], "model_extents_from_db_by_id": 32, "model_id": [32, 37, 41, 57, 58, 59], "model_output_from_db_by_id": 32, "model_output_path": [32, 37], "modifi": [22, 26], "modify_slr_data_from_takiwa": 26, "modul": 63, "modules_to_paramet": 61, "moduletyp": 61, "more": [25, 30, 61], "most": [0, 27], "mostli": [25, 41], "motion": [25, 30], "msl": [27, 28], "multi_intersect": 12, "multi_intersect_row": 12, "multipl": [12, 41, 48, 62], "multipoint": 12, "must": 27, "name": [3, 7, 9, 13, 17, 32, 33, 37, 40, 45, 46, 47, 52, 53, 55, 56, 57, 58, 59], "namedtupl": [7, 17, 25, 41, 46], "nan": 7, "nc": 9, "nc_file_path": 37, "nc_filepath": [57, 58], "nearest": [4, 30, 41], "necessari": [22, 48, 61], "need": [0, 27, 36, 37, 41, 48], "netcdf": [6, 9, 37, 56, 57, 58], "netcdf_lay": [42, 57], "netloc_api": 48, "network": [12, 15, 18, 20, 22, 23, 40], "network_data_path": [23, 40], "network_path": [23, 40], "networkx": [22, 23], "new": [11, 12, 17, 23, 29, 32, 37, 40, 47, 48, 53, 54, 55, 56, 57], "new_data_store_nam": [55, 57], "next": [4, 23, 30], "niwa": [17, 27, 29], "niwa_api_kei": 45, "node": [22, 41], "non": [29, 47, 61], "non_intersection_area": 29, "non_nz_geospatial_layers_data_to_db": 47, "none": [2, 3, 4, 6, 7, 9, 10, 11, 13, 15, 16, 18, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 36, 37, 41, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62], "nononintersectionerror": 47, "noriverdataexcept": [12, 20], "not_found": 56, "note": [27, 37, 48], "noth": 37, "notidedataexcept": 29, "notset": [6, 15, 25, 32, 36, 51, 54, 61], "number": [7, 17, 27, 46, 52, 54, 61], "numer": [6, 15, 25, 32, 36, 51, 54, 61], "nx": [22, 23], "nz": [17, 26, 27, 47, 48], "nz_building_outlin": [34, 37, 40], "nz_geospatial_layers_data_to_db": 47, "object": [22, 32, 40], "objectid": [12, 40], "obtain": [12, 13, 15, 20, 27], "occur": [27, 53, 62], "ogc": 0, "ok": [43, 56], "omit": 27, "on_failur": 62, "on_startup": 41, "onc": [12, 37], "one": [27, 56], "onfailurestatetask": 62, "onli": [16, 27, 34, 37], "opendata": 17, "openstreetmap": [12, 13, 16, 20], "opentopographi": [0, 36, 41], "oper": [1, 5, 14, 24, 35, 40, 49, 52, 53], "operationalerror": 52, "option": [2, 4, 6, 7, 9, 13, 15, 25, 27, 30, 32, 41, 45, 48, 53, 55, 57, 61], "order": 7, "org": 37, "orig_nc_file_path": 37, "origin": [27, 47], "orm": 53, "osm": [12, 13, 15, 16, 20], "osm_waterwai": [14, 42], "osm_waterways_on_bbox": 12, "other": [25, 27, 32, 37, 48, 54], "otherwis": [25, 30, 44, 53], "out": [4, 12, 30], "outflow": 12, "outlin": [34, 40], "output": [27, 32, 33, 34, 37, 40, 41], "output_": 37, "output_sr": 46, "output_timestep": 32, "outsid": 27, "over": [17, 27, 41], "overlap": 9, "packag": [1, 5, 14, 24, 35, 49, 63], "page": [42, 63], "panda": [2, 4, 7, 9, 12, 20, 26, 27, 30, 31, 34, 47, 50], "parallel": 41, "param_fil": 32, "paramet": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62], "particular": [41, 62], "password": 52, "past": 27, "path": [9, 21, 23, 25, 31, 32, 34, 37, 40, 50, 51, 56, 57, 58, 59], "pathlib": [9, 21, 23, 25, 31, 32, 34, 37, 50, 51, 56, 57, 58, 59], "pathwai": [2, 6, 7, 25, 30], "payload": 56, "pd": [2, 4, 7, 9, 12, 20, 26, 27, 30, 31, 34, 47, 50], "peak": 27, "per": [17, 27, 37, 46], "percentag": 9, "percentil": [25, 30], "perform": [4, 48, 60], "period": [0, 2, 6, 7, 27, 28, 36, 41], "period_tid": [27, 28], "pertain": 20, "ping": 43, "pixel": [34, 41], "place": 48, "pleas": 45, "plot": 4, "point": [0, 12, 13, 19, 20, 22, 25, 27, 29, 34, 41, 53], "polygon": [2, 3, 6, 9, 11, 15, 25, 32, 34, 36, 39, 40, 41, 48, 51, 53, 61, 62], "polygonize_flooded_area": 34, "popul": 51, "port": 52, "posit": [12, 27, 29], "posix": 41, "post": 0, "postgi": [55, 57], "postgres_db": 45, "postgres_host": 45, "postgres_password": 45, "postgres_port": 45, "postgres_us": 45, "preced": 4, "prepar": [22, 32], "prepare_bg_flood_model_input": 32, "prepare_network_data_for_construct": 22, "prepared_network_data": 22, "present": [3, 27, 47], "previou": [4, 30, 41], "primari": [40, 53], "print": [47, 48], "problem": 45, "proce": 18, "process": [0, 22, 32, 33, 36, 41, 50, 60], "process_boundary_input_fil": 32, "process_dem": [36, 41], "process_descriptor": 0, "process_existing_non_nz_geospatial_lay": 47, "process_hydro_dem": [35, 42], "process_new_non_nz_geospatial_lay": 47, "process_rain_input_fil": 32, "process_river_input_fil": 32, "produc": 32, "product": 61, "program": 52, "proj": 7, "proj_year": [25, 30], "project": [7, 25, 30], "propag": 54, "proper": 45, "provid": [11, 13, 17, 22, 26, 27, 30, 32, 36, 46, 47, 48, 50, 51, 52, 53, 54], "proxim": [12, 20], "public": [45, 53], "purpos": 61, "pywp": [0, 33], "quadrat": [4, 30], "queri": [17, 25, 26, 27, 32, 33, 41, 46, 48, 53, 55, 57], "query_loc_row": 27, "query_param": [17, 27, 46], "query_param_list": [17, 27], "query_time_dimens": 33, "radi": 7, "rain": [6, 8, 9, 32], "rain_data": 2, "rain_depth_in_catch": 4, "rain_forc": 9, "rain_intensity_mmhr": 9, "rainfal": [1, 41, 42], "rainfall_data_from_db": 2, "rainfall_data_from_hird": [5, 42], "rainfall_data_to_db": 3, "rainfall_enum": [4, 5, 6, 9, 42], "rainfall_model_input": [5, 42], "rainfall_sit": [5, 42], "rainfall_sites_to_db": 10, "raininputtyp": [6, 8, 9], "rais": [2, 4, 11, 12, 13, 17, 20, 25, 27, 29, 30, 32, 37, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62], "rang": [4, 27, 30], "raster": [9, 34, 41, 57, 59], "raster_lay": [42, 57], "rcp": [2, 6, 7], "rcp2": 7, "rcp4": 7, "rcp6": 7, "rcp8": 7, "reach": [4, 6, 13, 15, 25, 27], "reachabl": 50, "read": [15, 25, 26, 34, 45, 50], "read_and_check_instructions_fil": 50, "readi": [37, 41, 56, 57, 58, 59], "reason": [23, 25, 40, 41], "rec": [12, 13, 15, 17, 18, 20, 21, 22, 23, 40], "rec_api_url": 17, "rec_data": 40, "rec_data_w_node_coord": 22, "rec_data_with_nod": 22, "rec_data_with_sdc": 22, "rec_inflow_data": 13, "rec_inflows_on_bbox": 12, "rec_inflows_row": 20, "rec_inflows_w_input_point": 13, "rec_network": [22, 23, 40], "rec_network_data": [12, 20, 22, 23], "rec_network_exclus": [23, 40], "rec_network_id": [22, 23, 40], "rec_on_bbox": 12, "recent": [0, 27], "record": [17, 25, 27, 46, 47, 50], "recordcount": [17, 46], "rectangular": 61, "recurr": [2, 4, 6, 13, 15], "redi": 62, "reduc": 32, "refer": [4, 30, 32, 46, 47, 48, 51, 54, 63], "refresh_lidar_data_sourc": 0, "refresh_lidar_dataset": [36, 41], "region": [29, 36], "rel": 29, "relat": 32, "relev": [3, 22], "remov": [9, 21, 22, 25, 31, 32], "remove_existing_boundary_input": [25, 31], "remove_existing_rain_input": 9, "remove_existing_river_input": 21, "remove_unconnected_edges_from_network": 22, "renam": [13, 32], "repres": [2, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 29, 32, 33, 34, 36, 37, 40, 41, 46, 47, 51, 53, 54, 61], "represent": [23, 32, 40, 53], "request": [0, 2, 6, 7, 9, 10, 13, 15, 17, 21, 25, 27, 31, 32, 33, 46, 56], "requir": [10, 11, 22, 27, 34, 37], "resid": [18, 53], "resili": [0, 38], "resolut": [32, 36], "respect": [12, 22], "respond": [37, 55, 56, 57, 58, 59], "respons": [0, 33, 43, 44], "rest": [17, 43, 46], "result": [25, 32, 35, 41, 54], "retri": 54, "retriev": [2, 4, 11, 12, 16, 17, 18, 22, 23, 26, 27, 29, 32, 34, 36, 37, 41, 45, 46, 47, 48, 50, 51, 56, 62], "retrieve_building_outlin": 34, "retrieve_from_instruct": [42, 49, 62], "retrieve_hydro_dem_info": 36, "retry_funct": 54, "return": [0, 2, 3, 4, 7, 9, 10, 11, 12, 13, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 41, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 61, 62], "rise": [1, 24, 25, 26, 30, 31, 41], "river": [1, 32, 40, 41, 42], "river_data_from_niwa": [14, 42], "river_data_to_from_db": [14, 42], "river_enum": [13, 14, 15, 42], "river_inflow": [14, 42], "river_model_input": [14, 42], "river_network_for_aoi": [14, 42], "river_network_id": 18, "river_network_to_from_db": [14, 42], "rivernetwork": 40, "rivernetworkexclus": 40, "root": [6, 15, 25, 32, 36, 51, 54, 61], "round": 61, "row": [7, 47], "run": [0, 18, 22, 23, 32, 34, 35, 36, 39, 40, 41, 43, 44, 61, 62], "run_al": [38, 42, 60, 63], "run_bg_flood_model": 32, "run_flood_model": 41, "runtimeerror": [17, 27, 46], "same": [55, 57], "sampl": [19, 39, 61], "sample_polygon": [6, 15, 25, 32, 39, 51], "save": [32, 35, 47], "scale": [57, 59], "scenario": [2, 4, 13, 15, 19, 21, 25, 30, 33, 34, 37, 41], "scenario_id": 33, "scenario_opt": 41, "schema": 53, "scipi": [4, 30], "scrape": [0, 36, 41], "script": [6, 12, 13, 15, 16, 18, 20, 21, 22, 23, 25, 26, 32, 34, 36, 39, 40, 46, 47, 48, 50, 51, 52, 53, 54, 60, 61], "sea": [1, 18, 22, 24, 25, 26, 27, 28, 30, 31, 41], "sea_level_rise_data": [24, 42], "search": 63, "searis": 26, "second": [4, 9, 26, 27, 30, 32, 54], "section": 50, "segment": [12, 13, 20, 29], "select": [4, 6, 13, 15, 25, 32, 36, 41, 51, 61, 62], "selected_polygon_gdf": [6, 15, 25, 32, 36, 51, 61], "selected_polygon_wkt": [41, 62], "send": [41, 56, 62], "send_create_layer_request": 56, "sender": 41, "separ": 33, "sequenti": [12, 41], "seri": [12, 20, 26, 41, 47], "serial": 41, "serialis": 61, "serializ": 41, "serv": [37, 43, 55, 56, 57, 58, 59], "serve_model": [35, 42], "server": [17, 43, 52, 60], "servic": [0, 17], "service_unavail": 44, "session": [17, 27, 46, 53], "set": [2, 3, 6, 7, 10, 13, 15, 25, 30, 32, 36, 45, 47, 48, 51, 52, 54, 61], "setup_environ": [42, 49], "setup_log": 54, "shape": [12, 22, 36, 48], "share": [25, 30], "short": 32, "should": [13, 15, 25, 30, 32, 46, 50], "simul": 61, "simultan": 18, "sinc": [37, 55, 56, 57, 58, 59], "singl": [17, 26, 27, 46, 47, 61], "single_query_loc": 26, "site": [2, 3, 4, 7, 9, 10, 11], "site_data": [4, 7], "site_id": [2, 3, 7], "site_ids_in_catch": 3, "site_ids_list": 3, "sites_coverag": 9, "sites_coverage_in_catch": 9, "sites_in_aoi": 11, "sites_in_catch": [2, 3, 9], "sites_voronoi_intersect_catch": 9, "size": [9, 32], "skip": 7, "skip_row": 7, "slice": 33, "slinear": [4, 30], "slr": 30, "slr_data": 30, "slr_interp_scenario": 30, "slr_nz_dict": 26, "slr_scenario_data": 30, "small_nc": 32, "so": [0, 25, 34, 36, 37, 41, 45, 54], "socioeconom": [25, 30], "sort": 12, "sourc": [0, 36, 41], "source_table_list": 53, "spatial": [6, 8, 9, 12, 20, 36, 46], "spatial_uniform_rain_input": 9, "spatial_varying_rain_input": 9, "spec": 0, "specif": [1, 3, 4, 5, 13, 14, 20, 24, 27, 30, 35, 49, 54], "specifi": [4, 9, 12, 13, 16, 18, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 34, 36, 46, 47, 48, 51, 54], "sphinx": 42, "sql": [55, 57], "sqlalchemi": [2, 3, 10, 11, 12, 17, 18, 20, 22, 23, 26, 29, 32, 34, 36, 40, 47, 50, 52, 53, 54], "src": [6, 15, 25, 32, 36, 40, 42, 63], "ssp": [25, 30], "ssp1": [25, 30], "ssp2": [25, 30], "ssp3": [25, 30], "ssp5": [25, 30], "ssp_scenario": [25, 30], "standard": [7, 54], "start": [7, 27], "start_dat": 27, "start_datetim": 27, "state": [25, 62], "static": [33, 43, 62], "static_boundary_instruct": 50, "statsnz": 48, "statsnz_api_kei": 45, "statu": [33, 34, 41, 62], "status": 37, "step": 32, "still": 48, "stop": 32, "storag": 51, "store": [3, 6, 10, 11, 15, 16, 18, 23, 25, 26, 32, 47, 50, 51, 55, 56, 57, 58, 59], "store_flooded_buildings_in_databas": 34, "store_geospatial_layers_data_to_db": 47, "store_instructions_records_to_db": 50, "store_model_output_metadata_to_db": 32, "store_nam": 56, "store_rec_data_to_db": 18, "store_rec_network_to_db": 23, "store_slr_data_to_db": 26, "storm": [2, 4, 6], "storm_length_min": [4, 6], "str": [2, 3, 4, 6, 7, 8, 10, 12, 17, 19, 23, 25, 26, 27, 28, 30, 32, 33, 37, 40, 41, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62], "stream": 16, "strenum": [8, 19, 28], "string": [7, 10, 23, 32, 45, 62], "structur": [7, 10], "style": [41, 56, 57, 59], "style_exist": 56, "style_nam": 56, "sub": 41, "submodul": 63, "subpackag": 60, "subsequ": [22, 51, 54], "success": 43, "suggest": 47, "suppli": 25, "support": [0, 4, 30, 37, 43, 48, 56], "swagger": [43, 63], "swagger_ui_blueprint": 43, "swagger_url": 43, "switch": 62, "system": [32, 45, 46, 47, 48, 54, 61], "t": 53, "tabl": [0, 3, 18, 22, 23, 32, 34, 36, 38, 41, 42, 47, 49, 50, 51, 55, 57], "table_nam": [47, 53], "tabular": 7, "take": [0, 30, 34, 36, 37, 41, 54], "takiwa": 26, "task": [12, 13, 20, 21, 23, 38, 42, 60, 63], "taskid": 0, "tempor": [4, 30], "terrain": 36, "terria": 33, "terriaj": [0, 33], "test_database_integr": 45, "text": [6, 7, 9, 23, 32], "textio": 32, "than": [4, 13, 27, 32, 34], "thei": [22, 25, 37, 44], "them": [23, 32, 37, 50], "thi": [9, 12, 13, 16, 18, 20, 21, 22, 23, 26, 32, 34, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 60, 61], "thiessen": [2, 3, 9, 11], "thiessen_polygon": [5, 42], "thiessen_polygons_calcul": 11, "thiessen_polygons_from_db": 11, "thiessen_polygons_to_db": 11, "three": 32, "threshold": [12, 13, 20, 34], "through": 43, "throughout": 11, "thrown": 54, "tide": [1, 41, 42], "tide_api_url_data": 27, "tide_api_url_data_csv": 27, "tide_data": [26, 27, 30], "tide_data_from_niwa": [24, 42], "tide_data_utc": 27, "tide_enum": [24, 27, 42], "tide_length_min": [25, 27], "tide_query_loc": [24, 27, 42], "tide_slr": 28, "tide_slr_combin": [24, 42], "tide_slr_data": 31, "tide_slr_model_input": [24, 42], "tiff": 37, "time": [0, 2, 4, 6, 7, 12, 13, 15, 25, 26, 27, 30, 32, 33, 36, 41, 54], "time_period": [2, 6, 7], "time_to_peak_min": [4, 6, 13, 15, 25, 27], "timestamp": [23, 27, 32, 40, 53], "timezon": 27, "to_cr": 54, "todai": 27, "top": 38, "topographi": 32, "total": [17, 27, 46], "total_dai": 27, "total_record_count": [17, 46], "track": 51, "transform": [4, 10, 12, 48, 54, 62], "transform_data_for_selected_method": 4, "transpos": 4, "transposed_catchment_data": 4, "true": [2, 3, 7, 13, 15, 25, 30, 45, 53, 56], "tupl": [7, 17, 22, 23, 27, 32, 36, 41, 46, 47, 54, 62], "twin": [0, 38, 39, 43, 61], "two": [7, 12], "txt": 9, "type": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 61, 62], "under": 26, "unexpect": [37, 55, 56, 57, 58, 59], "uniform": [6, 8, 9, 25, 31, 32], "uninfer": 62, "union": [4, 6, 13, 15, 17, 25, 27, 32, 36, 41, 46, 50, 61], "uniqu": [7, 22, 40, 47, 53], "unique_column_nam": [47, 50, 53], "unique_id": [40, 53], "unreach": 50, "unsupport": 48, "up": [0, 4, 30, 36, 41, 43, 52], "updat": [0, 22], "upload": [56, 57, 58, 59], "upload_file_to_stor": 56, "upper": [13, 15, 19], "url": [7, 17, 27, 36, 41, 46, 50, 53, 56, 58, 59], "us": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 36, 37, 39, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62], "user": [2, 37, 47, 51], "user_log_info_to_db": 47, "user_log_inform": 53, "userloginfo": 53, "usernam": 52, "utc": 27, "util": [6, 15, 25, 32, 36, 40, 42, 45, 49, 51, 53, 57], "valid": [2, 4, 6, 9, 13, 15, 25, 27, 30, 32, 41, 50], "validate_instruction_field": 50, "validate_slr_paramet": [25, 41], "validate_url_reach": 50, "validationresult": [25, 41], "valu": [2, 4, 6, 12, 13, 15, 20, 25, 27, 30, 32, 36, 41, 45, 47, 48, 51, 54, 61], "valueerror": [2, 4, 11, 12, 13, 25, 27, 29, 30, 45, 46, 48, 50, 56], "var_nam": 45, "vari": [6, 8, 9, 48], "variabl": [32, 45, 48, 52, 56], "variou": [47, 51, 53], "vector": [9, 47, 48], "vector_data": 47, "verbos": [47, 48], "version": 41, "vertic": [25, 30], "via": [55, 58, 59], "vicin": 20, "view": [37, 44, 55, 57], "viewparam": 37, "viridi": [57, 59], "visual": 32, "vlm": [25, 30], "wa": [23, 27, 40, 53], "warn": [6, 15, 25, 32, 36, 51, 54, 61], "water": [12, 31], "waterwai": [12, 13, 15, 16, 20], "we": 45, "web": [0, 36, 41, 43], "webprocess": 0, "webprocessingservic": [0, 33], "websit": [7, 10, 26], "weight": 9, "well": [23, 32, 52], "wf": 48, "wfsquerybas": 48, "wgs84": 62, "when": [4, 6, 12, 13, 15, 25, 27, 29, 32, 40, 41, 46, 47, 48, 53], "where": [12, 22, 32, 45, 53], "whether": [13, 25, 30, 32, 47, 48], "which": [9, 12, 13, 22, 25, 27, 30, 34, 36, 41, 46, 54], "whole": 61, "whose": [12, 13, 20], "why": [23, 40], "wide": 4, "within": [2, 3, 4, 9, 11, 12, 13, 17, 18, 20, 22, 27, 29, 46, 58], "wkt": [23, 32, 41, 62], "wkt_to_gdf": 62, "work": 56, "worker": [41, 44], "workspac": [33, 37, 55, 56, 57, 58, 59], "workspace_nam": [37, 55, 56, 57, 58, 59], "wp": [0, 33], "wpsrequest": 33, "write": [9, 32], "written": 32, "x1": 41, "x2": 41, "xarrai": [9, 20, 34, 36], "xml": [55, 56, 57], "xr": [9, 20, 36], "y1": 41, "y2": 41, "year": [25, 27, 30], "yml": 43, "you": [25, 48], "zb": 32, "zealand": [11, 17, 29, 47, 48, 53, 54], "zero": [4, 30]}, "titles": ["floodresilience.blueprint", "floodresilience.dynamic_boundary_conditions", "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_from_db", "floodresilience.dynamic_boundary_conditions.rainfall.hirds_rainfall_data_to_db", "floodresilience.dynamic_boundary_conditions.rainfall.hyetograph", "floodresilience.dynamic_boundary_conditions.rainfall", "floodresilience.dynamic_boundary_conditions.rainfall.main_rainfall", "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_data_from_hirds", "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_enum", "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_model_input", "floodresilience.dynamic_boundary_conditions.rainfall.rainfall_sites", "floodresilience.dynamic_boundary_conditions.rainfall.thiessen_polygons", "floodresilience.dynamic_boundary_conditions.river.align_rec_osm", "floodresilience.dynamic_boundary_conditions.river.hydrograph", "floodresilience.dynamic_boundary_conditions.river", "floodresilience.dynamic_boundary_conditions.river.main_river", "floodresilience.dynamic_boundary_conditions.river.osm_waterways", "floodresilience.dynamic_boundary_conditions.river.river_data_from_niwa", "floodresilience.dynamic_boundary_conditions.river.river_data_to_from_db", "floodresilience.dynamic_boundary_conditions.river.river_enum", "floodresilience.dynamic_boundary_conditions.river.river_inflows", "floodresilience.dynamic_boundary_conditions.river.river_model_input", "floodresilience.dynamic_boundary_conditions.river.river_network_for_aoi", "floodresilience.dynamic_boundary_conditions.river.river_network_to_from_db", "floodresilience.dynamic_boundary_conditions.tide", "floodresilience.dynamic_boundary_conditions.tide.main_tide_slr", "floodresilience.dynamic_boundary_conditions.tide.sea_level_rise_data", "floodresilience.dynamic_boundary_conditions.tide.tide_data_from_niwa", "floodresilience.dynamic_boundary_conditions.tide.tide_enum", "floodresilience.dynamic_boundary_conditions.tide.tide_query_location", "floodresilience.dynamic_boundary_conditions.tide.tide_slr_combine", "floodresilience.dynamic_boundary_conditions.tide.tide_slr_model_input", "floodresilience.flood_model.bg_flood_model", "floodresilience.flood_model.flood_scenario_process_service", "floodresilience.flood_model.flooded_buildings", "floodresilience.flood_model", "floodresilience.flood_model.process_hydro_dem", "floodresilience.flood_model.serve_model", "floodresilience", "floodresilience.run_all", "floodresilience.tables", "floodresilience.tasks", "API Reference", "src.app", "src.check_celery_alive", "src.config", "src.digitaltwin.arcgis_rest_api", "src.digitaltwin.data_to_db", "src.digitaltwin.get_data_using_geoapis", "src.digitaltwin", "src.digitaltwin.instructions_records_to_db", "src.digitaltwin.retrieve_from_instructions", "src.digitaltwin.setup_environment", "src.digitaltwin.tables", "src.digitaltwin.utils", "src.geoserver.database_layers", "src.geoserver.geoserver_common", "src.geoserver", "src.geoserver.netcdf_layers", "src.geoserver.raster_layers", "src", "src.run_all", "src.tasks", "Welcome to Digital Twin for Flood Resilience in Aotearoa New Zealand\u2019s documentation!"], "titleterms": {"": 63, "align_rec_osm": 12, "aotearoa": 63, "api": [42, 63], "app": 43, "arcgis_rest_api": 46, "attribut": [0, 2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 41, 43, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62], "bg_flood_model": 32, "blueprint": 0, "check_celery_al": 44, "class": [7, 8, 17, 19, 25, 28, 33, 40, 41, 45, 46, 48, 53, 54, 62], "codebas": 63, "config": 45, "content": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "data_to_db": 47, "database_lay": 55, "digit": 63, "digitaltwin": [46, 47, 48, 49, 50, 51, 52, 53, 54], "document": 63, "dynamic_boundary_condit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "except": [12, 29, 47], "flood": 63, "flood_model": [32, 33, 34, 35, 36, 37], "flood_scenario_process_servic": 33, "flooded_build": 34, "floodresili": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "function": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62], "geoserv": [55, 56, 57, 58, 59], "geoserver_common": 56, "get_data_using_geoapi": 48, "hirds_rainfall_data_from_db": 2, "hirds_rainfall_data_to_db": 3, "hydrograph": 13, "hyetograph": 4, "indic": 63, "instructions_records_to_db": 50, "main_rainfal": 6, "main_riv": 15, "main_tide_slr": 25, "modul": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62], "netcdf_lay": 58, "new": 63, "osm_waterwai": 16, "packag": [38, 57, 60], "process_hydro_dem": 36, "python": 63, "rainfal": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "rainfall_data_from_hird": 7, "rainfall_enum": 8, "rainfall_model_input": 9, "rainfall_sit": 10, "raster_lay": 59, "refer": 42, "resili": 63, "rest": 63, "retrieve_from_instruct": 51, "river": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "river_data_from_niwa": 17, "river_data_to_from_db": 18, "river_enum": 19, "river_inflow": 20, "river_model_input": 21, "river_network_for_aoi": 22, "river_network_to_from_db": 23, "run_al": [39, 61], "sea_level_rise_data": 26, "serve_model": 37, "setup_environ": 52, "specif": 63, "src": [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "submodul": [1, 5, 14, 24, 35, 38, 49, 57, 60], "tabl": [40, 53, 63], "task": [41, 62], "thiessen_polygon": 11, "tide": [24, 25, 26, 27, 28, 29, 30, 31], "tide_data_from_niwa": 27, "tide_enum": 28, "tide_query_loc": 29, "tide_slr_combin": 30, "tide_slr_model_input": 31, "twin": 63, "util": 54, "welcom": 63, "zealand": 63}})